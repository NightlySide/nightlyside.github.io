{"version":3,"sources":["webpack:///./src/components/post/table-of-contents.tsx","webpack:///./src/hooks/use-active-hash.tsx","webpack:///./src/templates/Post.tsx"],"names":["TableOfContents","post","targetedIds","useMemo","headings","map","heading","id","length","activeHash","itemIds","rootMargin","undefined","useState","setActiveHash","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","element","document","getElementById","observe","unobserve","useActiveHash","querySelectorAll","a","classList","remove","add","activeLink","className","index","key","to","depth","value","pageQuery","PostTemplate","prev_slug","next_slug","data","pageContext","markdownRemark","previous","next","frontmatter","slug","fields","title","description","excerpt","fluid","image","childImageSharp","alt","date","timeToRead","dangerouslySetInnerHTML","__html","html","rel"],"mappings":"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","file":"component---src-templates-post-tsx-6cf48e599d534766c181.js","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { Post } from \"../../../types/post\";\nimport { useActiveHash } from \"../../hooks/use-active-hash\";\n\ninterface TableOfContentsProps {\n  post: Post;\n}\n\nconst TableOfContents = ({ post }: TableOfContentsProps) => {\n  const targetedIds = useMemo(() => {\n    return post.headings?.map((heading) => heading.id);\n  }, [post]);\n\n  if (targetedIds?.length == 0) return <div></div>;\n\n  const activeHash = useActiveHash(targetedIds as string[]);\n\n  useEffect(() => {\n    const ToClinks = document.querySelectorAll(`.toc a`);\n\n    ToClinks.forEach((a) => {\n      a.classList.remove(\"text-secondary\");\n      a.classList.remove(\"text-accent\");\n      a.classList.add(\"text-secondary\");\n    });\n\n    const activeLink = document.querySelectorAll(`.toc a[href$=\"${\"/#\" + activeHash}\"]`);\n\n    if (activeLink.length) {\n      activeLink[0].classList.remove(\"text-secondary\");\n      activeLink[0].classList.add(\"text-accent\");\n    }\n  }, [activeHash]);\n\n  return (\n    <aside className=\"sticky hidden lg:block pl-8 pt-8 max-h-0.5 flex-shrink-0 top-0\">\n      <nav className=\"toc text-secondary\">\n        <h2 className=\"mb-2 font-normal text-accent tracking-widestest uppercase\">Table of contents</h2>\n        {post.headings &&\n          post.headings.map((heading, index) => {\n            return (\n              <Link\n                key={index}\n                to={`#${heading.id}`}\n                className={`block mt-3 text-sm hover:text-accent ml-${4 * (heading.depth - 2)} text-secondary`}>\n                {heading.value}\n              </Link>\n            );\n          })}\n      </nav>\n    </aside>\n  );\n};\n\nexport default TableOfContents;\n","import { useEffect, useState } from \"react\";\n\nexport const useActiveHash = (itemIds: string[], rootMargin = undefined) => {\n  const [activeHash, setActiveHash] = useState(``);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveHash(entry.target.id);\n          }\n        });\n      },\n      { rootMargin: rootMargin || `0% 0% -50% 0%` },\n    );\n\n    itemIds.forEach((id: string) => {\n      const element = document.getElementById(id);\n      if (element) observer.observe(element);\n    });\n\n    return () => {\n      itemIds.forEach((id: string) => {\n        const element = document.getElementById(id);\n        if (element) observer.unobserve(element);\n      });\n    };\n  }, []);\n\n  return activeHash;\n};\n","import React from \"react\";\nimport Img from \"gatsby-image\";\nimport { Link, graphql } from \"gatsby\";\n\nimport MainLayout from \"../components/core/main-layout\";\nimport Head from \"../components/core/head\";\nimport TableOfContents from \"../components/post/table-of-contents\";\nimport { Post } from \"../../types/post\";\n\nimport \"../styles/post.css\";\n\ninterface Props {\n  readonly data: PageQueryData;\n  readonly pageContext: {\n    previous?: any;\n    next?: any;\n  };\n}\n\nconst PostTemplate: React.FC<Props> = ({ data, pageContext }) => {\n  const post = data.markdownRemark;\n  const { previous, next } = pageContext;\n\n  let prev_slug, next_slug;\n\n  if (previous) prev_slug = previous.frontmatter.slug ? previous.frontmatter.slug : previous.fields.slug;\n  if (next) next_slug = next.frontmatter.slug ? next.frontmatter.slug : next.fields.slug;\n\n  return (\n    <MainLayout>\n      <Head title={post.frontmatter.title} description={post.excerpt} />\n      <Img\n        fluid={post.frontmatter.image.childImageSharp.fluid}\n        alt={`${post.frontmatter.title} header image`}\n        className=\"max-h-48\"\n      />\n      <article className=\"container m-auto px-5 sm:px-12 md:px-20 max-w-screen-xl\">\n        <div className=\"flex justify-between my-12 relative\">\n          <main className=\"prose lg:prose-lg w-full\">\n            <header className=\"mb-4\">\n              <p className=\"text-sm text-secondary\">\n                {post.frontmatter.date} • {post.timeToRead} min de lecture\n              </p>\n              <h1 className=\"text-primary text-4xl font-black tracking-tight\">{post.frontmatter.title}</h1>\n            </header>\n            <div>\n              <div dangerouslySetInnerHTML={{ __html: post.html as string }} />\n              <div className=\"grid grid-cols-2 gap-4 mt-16\">\n                {previous ? (\n                  <Link\n                    to={`/posts/${prev_slug}`}\n                    rel=\"prev\"\n                    className=\"text-center text-accent border rounded-lg py-4 border-current no-underline\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                ) : (\n                  <div></div>\n                )}\n                {next ? (\n                  <Link\n                    to={`/posts/${next_slug}`}\n                    rel=\"next\"\n                    className=\"text-center text-accent border rounded-lg py-4 border-current no-underline\">\n                    {next.frontmatter.title} →\n                  </Link>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n            </div>\n          </main>\n          <TableOfContents post={post} />\n        </div>\n      </article>\n    </MainLayout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  markdownRemark: Post;\n}\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 2500)\n      tableOfContents\n      timeToRead\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        slug\n        tags\n        layout\n        published\n        image {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      headings {\n        value\n        depth\n        id\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n"],"sourceRoot":""}