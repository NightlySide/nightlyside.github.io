<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alexandre Froehlich - projets</title><link href="https://nightlyside.github.io/blog/" rel="alternate"></link><link href="https://nightlyside.github.io/blog/feeds/projets.atom.xml" rel="self"></link><id>https://nightlyside.github.io/blog/</id><updated>2020-06-26T00:00:00+02:00</updated><entry><title>Un chatbot vocal en python</title><link href="https://nightlyside.github.io/blog/projets/un-chatbot-vocal-en-python/" rel="alternate"></link><published>2020-06-26T00:00:00+02:00</published><updated>2020-06-26T00:00:00+02:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2020-06-26:/blog/projets/un-chatbot-vocal-en-python/</id><summary type="html">
&lt;p&gt;Les chatbots commerciaux sont de plus en plus présents sur les sites de grande distribution ou de services à grande échelle. Je me suis demandé à quel point il était facile de concevoir un chatbox vocal en utilisant python et &lt;a href="https://dialogflow.cloud.google.com"&gt;Dialogflow&lt;/a&gt;.
&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Les chatbots commerciaux sont de plus en plus pr&amp;eacute;sents sur les sites de grande distribution ou de services &amp;agrave; grande &amp;eacute;chelle. Je me suis demand&amp;eacute; &amp;agrave; quel point il &amp;eacute;tait facile de concevoir un chatbox vocal en utilisant python et &lt;a href="https://dialogflow.cloud.google.com"&gt;Dialogflow&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Le code du projet est disponible sur github : &lt;a href="https://github.com/NightlySide/ChatBox-Vocal"&gt;https://github.com/NightlySide/ChatBox-Vocal&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Comme tout projet, il faut pouvoir trouver un point d'entr&amp;eacute;e afin de ne pas se perdre. Je d&amp;eacute;cide donc de commencer par traduire du fran&amp;ccedil;ais oral en texte.&lt;/p&gt;
&lt;h2 id="le speech to text"&gt;Le speech to text&lt;/h2&gt;
&lt;p&gt;Python &amp;eacute;tant tr&amp;egrave;s versatile et surtout tr&amp;egrave;s populaire, il existe une multitude de biblioth&amp;egrave;ques pour faire de la traduction de vocal vers texte. N'en connaissant aucun, j'ai cherch&amp;eacute; &amp;agrave; savoir parmi toutes ces biblioth&amp;egrave;ques, lesquelles fonctionnaient pour une traduction en fran&amp;ccedil;ais. Je me suis arr&amp;ecirc;t&amp;eacute; sur &lt;a href="https://pypi.org/project/SpeechRecognition/"&gt;Speech-Recognition&lt;/a&gt; qui me semble bien fourni en documentation, qui fonctionne avec diverses API de reconnaissance de texte, mais surtout qui comprend bien le fran&amp;ccedil;ais !&lt;/p&gt;
&lt;p&gt;Un premier script permet d'essayer cette fonctionnalit&amp;eacute; en &amp;eacute;coutant puis en traduisant ce qui a &amp;eacute;t&amp;eacute; dit :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;speech_recognition&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sr&lt;/span&gt;

&lt;span class="c1"&gt;# On enregistre l'audio&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Recognizer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Microphone&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# On ecoute une seconde pour calibrer le bruit ambiant du micro&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adjust_for_ambient_noise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Je vous &amp;eacute;coute"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;audio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# On essaie de comprendre ce qui a &amp;eacute;t&amp;eacute; dit&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Tu as dit : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recognize_google&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"fr-FR"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UnknownValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"L'audio n'a pas pu &amp;ecirc;tre compris"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Impossible d'envoyer la requ&amp;ecirc;te. Erreur : &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Il ne reste plus qu'&amp;agrave; tout mettre dans une fonction, ou plutot dans une classe en ajoutant les fonctions d'&amp;eacute;coute en arri&amp;egrave;re plan avec une fonction "callback". Le code final pour cette classe est le suivant : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SpeechRecognition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Recognizer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Microphone&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="c1"&gt;# On cr&amp;eacute;e la fonction d'arr&amp;ecirc;t&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stop_listening&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_listening&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;""" Permet de lancer l'&amp;eacute;coute du micro en arri&amp;egrave;re-plan&lt;/span&gt;
&lt;span class="sd"&gt;        """&lt;/span&gt;
        &lt;span class="c1"&gt;# On ajuste au bruit ambiant&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adjust_for_ambient_noise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_listening_callback&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stop_listening&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen_in_background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Je vous &amp;eacute;coute"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;stop_listening&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;""" Permet d'arr&amp;ecirc;ter l'&amp;eacute;coute du micro en arri&amp;egrave;re-plan&lt;/span&gt;
&lt;span class="sd"&gt;        """&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stop_listening&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wait_for_stop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Arr&amp;ecirc;t de l'&amp;eacute;coute en arri&amp;egrave;re plan"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nd"&gt;@staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_listening_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recognizer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;""" Fonction appell&amp;eacute;e en arri&amp;egrave;re plan dans un thread &amp;agrave; part&lt;/span&gt;
&lt;span class="sd"&gt;        """&lt;/span&gt;
        &lt;span class="c1"&gt;# On a r&amp;eacute;cup&amp;eacute;r&amp;eacute; des donn&amp;eacute;es on va essayer de le traduire&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Vous avez dit : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;recognizer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recognize_google&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;audio&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"fr-FR"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UnknownValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"L'audio n'a pas pu &amp;ecirc;tre compris"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Impossible d'envoyer la requ&amp;ecirc;te. Erreur : &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maintenant le programme est capable d'&amp;eacute;couter en arri&amp;egrave;re plan, de d&amp;eacute;tecter une phrase et de la convertir en texte, ici gr&amp;acirc;ce &amp;agrave; l'API de google.&lt;/p&gt;
&lt;h2 id="le text to speech"&gt;Le text to speech&lt;/h2&gt;
&lt;p&gt;Afin de pouvoir parler de chatbot vocal, il est int&amp;eacute;ressant de faire "parler" la machine. De m&amp;ecirc;me je vais chercher une biblioth&amp;egrave;que capable de parler en fran&amp;ccedil;ais pour des raisons &amp;eacute;videntes.
Pour commencer j'ai d&amp;eacute;cid&amp;eacute; d'utiliser &lt;a href="https://pypi.org/project/gTTS/"&gt;Google Text-to-speech&lt;/a&gt; par sa simplicit&amp;eacute; et sa popularit&amp;eacute;. Plus tard il serait int&amp;eacute;ressant d'enregistrer moi m&amp;ecirc;me les phrases surtout si le chatbot vocal poss&amp;egrave;de une quantit&amp;eacute; r&amp;eacute;duite de mots.&lt;br/&gt;
Pour jouer le son je voulais au d&amp;eacute;part utiliser PyAudio, j'ai choisi sur une biblioth&amp;egrave;que bien plus simple &amp;agrave; utiliser : &lt;a href="https://pypi.org/project/playsound/"&gt;playsound&lt;/a&gt; qui est en plus cross platform !&lt;/p&gt;
&lt;p&gt;Le code simple pour faire une phrase est le suivant :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;gtts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;gTTS&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;playsound&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;playsound&lt;/span&gt;

&lt;span class="n"&gt;texte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Bonjour &amp;agrave; tous! Aujourd'hui les amis on va parler ensemble ..."&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Getting voice output"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;myobj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gTTS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;texte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"fr"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;myobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"temp.mp3"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Playing sound"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;playsound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"temp.mp3"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"temp.mp3"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Il est bien mieux d'utiliser &lt;code&gt;os.unlink("file.mp3")&lt;/code&gt; pour supprimer un fichier que &lt;code&gt;os.system("rm file.mp3")&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Il ne reste plus qu'&amp;agrave; cr&amp;eacute;er la fonction correspondante, pas besoin de cr&amp;eacute;er une classe ici. Finalement la fonction devient la suivante : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;speak&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texte&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid4&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;".mp3"&lt;/span&gt;
    &lt;span class="n"&gt;myobj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gTTS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;texte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"fr"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;myobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;playsound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;J'en ai profit&amp;eacute; pour ajouter un nom de fichier al&amp;eacute;atoire pour &amp;eacute;viter le cas ou la fonction est appel&amp;eacute;e plusieurs fois en m&amp;ecirc;me temps, &amp;agrave; l'aide d'un &lt;a href="https://fr.wikipedia.org/wiki/Universal_Unique_Identifier"&gt;UUID&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="la conversation"&gt;La conversation&lt;/h2&gt;
&lt;p&gt;Pour cr&amp;eacute;er un chatbot un minimum intelligent, on peut s'amuser &amp;agrave; coder une sorte d'intelligence artificielle qui comprends le fond de la phrase puis est capable de r&amp;eacute;pondre en cons&amp;eacute;quences. Cependant le travail n&amp;eacute;cessaire pour mettre en place ce concept m&amp;eacute;rite son sujet et son projet s&amp;eacute;par&amp;eacute;. Afin de pouvoir continuer ce projet, de nombreuses entreprises ont d&amp;eacute;j&amp;agrave; une telle interface accessible depuis une API.&lt;/p&gt;
&lt;p&gt;J'ai d&amp;eacute;cid&amp;eacute; de partir sur &lt;a href="https://dialogflow.cloud.google.com/"&gt;Dialogflow&lt;/a&gt; et je vais essayer d'expliquer simplement son fonctionnement.&lt;/p&gt;
&lt;p&gt;Apr&amp;egrave;s s'&amp;ecirc;tre connect&amp;eacute; et cr&amp;eacute;e un projet, google nous pr&amp;eacute;sente deux exemples pour comprendre comment le syst&amp;egrave;me fonctionne.
Du c&amp;ocirc;t&amp;eacute; du code, j'ai repris l'exemple donn&amp;eacute; sur un &lt;a href="https://medium.com/swlh/working-with-dialogflow-using-python-client-cb2196d579a4"&gt;article de Medium&lt;/a&gt; qui permet d'acc&amp;egrave;der aux requ&amp;ecirc;tes avec une cl&amp;eacute; priv&amp;eacute;e.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dialogflow&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google.api_core.exceptions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;InvalidArgument&lt;/span&gt;

&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"GOOGLE_APPLICATION_CREDENTIALS"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'private_key.json'&lt;/span&gt;

&lt;span class="n"&gt;DIALOGFLOW_PROJECT_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'[PROJECT_ID]'&lt;/span&gt;
&lt;span class="n"&gt;DIALOGFLOW_LANGUAGE_CODE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'fr'&lt;/span&gt;
&lt;span class="n"&gt;SESSION_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'me'&lt;/span&gt;

&lt;span class="n"&gt;text_to_be_analyzed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Bonjour"&lt;/span&gt;

&lt;span class="n"&gt;session_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dialogflow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SessionsClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DIALOGFLOW_PROJECT_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SESSION_ID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;text_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dialogflow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;text_to_be_analyzed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;language_code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DIALOGFLOW_LANGUAGE_CODE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;query_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dialogflow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QueryInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;text_input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detect_intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;query_input&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query_input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;InvalidArgument&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Query text:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query_result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Detected intent:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query_result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Detected intent confidence:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query_result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intent_detection_confidence&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Fulfillment text:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query_result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fulfillment_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On obtient alors comme sortie : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Query text: Bonjour
Detected intent: smalltalk.greetings.hello
Detected intent confidence: &lt;span class="m"&gt;1&lt;/span&gt;.0
Fulfillment text: Salut &amp;agrave; toi&amp;nbsp;!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ca fonctionne parfaitement ! Encore une fois il ne reste plus qu'&amp;agrave; cr&amp;eacute;er une fonction correspondante et &amp;agrave; tout connecter.&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Ce projet assez simple et assez court est tr&amp;egrave;s int&amp;eacute;ressant pour voir comment utiliser plusieurs API dans un m&amp;ecirc;me projet afin de pouvoir concevoir un pseudo assistant virtuel.&lt;br/&gt;
Cependant on pourrait aller plus loin et j'imagine d&amp;eacute;j&amp;agrave; les pistes suivantes : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;remplacer la synth&amp;egrave;se vocale par des phrases que j'ai enregistr&amp;eacute;&lt;/li&gt;
&lt;li&gt;lier des actions aux r&amp;eacute;ponses de la machine (ex: ouvrir firefox etc ...)&lt;/li&gt;
&lt;li&gt;trouver une solution offline pour le r&amp;eacute;aliser&lt;/li&gt;
&lt;li&gt;le connecter &amp;agrave; d'autres applications que j'ai d&amp;eacute;velopp&amp;eacute;es, comme par exemple : &lt;a href="https://nightlyside.github.io/blog/drafts/a-chef-in-the-fridge.html"&gt;a Chef in the fridge&lt;/a&gt; pour chercher automatiquement une recette&lt;/li&gt;
&lt;/ul&gt;</content><category term="projets"></category><category term="python"></category><category term="web"></category><category term="api"></category></entry><entry><title>La Bataille Brestoise</title><link href="https://nightlyside.github.io/blog/projets/la-bataille-brestoise/" rel="alternate"></link><published>2020-06-15T00:00:00+02:00</published><updated>2020-06-15T00:00:00+02:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2020-06-15:/blog/projets/la-bataille-brestoise/</id><summary type="html">
&lt;p&gt;Dans le cadre de mes études d'ingénieur à l'&lt;a href="https://www.ensta-bretagne.fr"&gt;ENSTA Bretagne&lt;/a&gt;, j'ai réalisé à l'aide de mon binôme un projet de fin de cycle en python avec pour objectif d'y intégrer de la programmation orientée objet ainsi que de l'interface homme machine.&lt;br/&gt;
"La bataille brestoise" est le projet que nous avons codé sur près de 3 mois. Il s'agit d'un jeu en réseau de bataille navale en temps réel basé sur la rade de Brest ainsi que sur les bâtiments de la Marine Nationale.
&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Dans le cadre de mes &amp;eacute;tudes d'ing&amp;eacute;nieur &amp;agrave; l'&lt;a href="https://www.ensta-bretagne.fr"&gt;ENSTA Bretagne&lt;/a&gt;, j'ai r&amp;eacute;alis&amp;eacute; &amp;agrave; l'aide de mon bin&amp;ocirc;me un projet de fin de cycle en python avec pour objectif d'y int&amp;eacute;grer de la programmation orient&amp;eacute;e objet ainsi que de l'interface homme machine.&lt;br/&gt;
"La bataille brestoise" est le projet que nous avons cod&amp;eacute; sur pr&amp;egrave;s de 3 mois. Il s'agit d'un jeu en r&amp;eacute;seau de bataille navale en temps r&amp;eacute;el bas&amp;eacute; sur la rade de Brest ainsi que sur les b&amp;acirc;timents de la Marine Nationale.
&lt;/p&gt;
&lt;hr/&gt;
&lt;blockquote&gt;
&lt;p&gt;Le projet est disponible sur mon repo (installation et utilisation) : &lt;a href="https://github.com/NightlySide/La-Bataille-Brestoise"&gt;https://github.com/NightlySide/La-Bataille-Brestoise&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;L'objectif initial du projet &amp;eacute;tait de mettre &amp;agrave; profit le cours vu sur la programmation orient&amp;eacute;e objet ainsi que les bases de l'Interface Homme-Machine (IHM). Cependant, avec mon bin&amp;ocirc;me nous avons souhait&amp;eacute; pousser le projet plus loin en y int&amp;eacute;grant par exemple une connexion clients-serveur et des machines &amp;agrave; &amp;eacute;tat finis pour faire de l'intelligence artificielle.&lt;/p&gt;
&lt;p&gt;Nous avons donc d&amp;eacute;cid&amp;eacute; de partir sur le d&amp;eacute;veloppement d'un jeu de bataille navale en temps r&amp;eacute;el, inspir&amp;eacute; de jeux en .io tel que le c&amp;eacute;l&amp;egrave;bre &lt;a href="https://agar.io"&gt;agar.io&lt;/a&gt;, dont les b&amp;acirc;timents sont inspir&amp;eacute;s de la Marine Nationale.&lt;br/&gt;
Dans ce jeu, le but sera d'atteindre le niveau 5 en &amp;eacute;liminant les adversaires (IA et joueurs r&amp;eacute;els) pour obtenir des points d'exp&amp;eacute;rience. Si le joueur d&amp;eacute;c&amp;egrave;de, il r&amp;eacute;appara&amp;icirc;t avec un b&amp;acirc;timent de niveau inf&amp;eacute;rieur.&lt;br/&gt;
Des commandes sont disponibles pour le client et pour le serveur de mani&amp;egrave;re &amp;agrave; pouvoir int&amp;eacute;ragir avec le jeu. De plus une chatbox est mise &amp;agrave; disposition des joueurs pour la communication entre les joueurs et la communication des informations sur la partie.&lt;/p&gt;
&lt;p&gt;L'&amp;eacute;quilibrage du jeu est obtenu par deux &amp;eacute;tapes, la premi&amp;egrave;re &amp;eacute;tant un calcul b&amp;egrave;te et m&amp;eacute;chant de d&amp;eacute;g&amp;acirc;ts par seconde. Les r&amp;eacute;sultats condens&amp;eacute;s dans un tableau excel permettent de mettre en avant cet &amp;eacute;quilibrage. La deuxi&amp;egrave;me &amp;eacute;tape consiste &amp;agrave; tester les r&amp;eacute;glages en jeu.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Equilibrage des b&amp;acirc;timents" class="center img-zoomable" height="400px" src="https://nightlyside.github.io/blog/images/projets/bataille-brestoise/balance.png"/&gt;&lt;/p&gt;
&lt;p&gt;Pour ce jeu, on a tout d'abord commenc&amp;eacute; par la cr&amp;eacute;ation du serveur. &lt;/p&gt;
&lt;h2 id="le serveur"&gt;Le serveur&lt;/h2&gt;
&lt;p&gt;Nous souhaitions impl&amp;eacute;mente une structure de serveur autoritaire et de clients simples (&lt;a href="https://www.gabrielgambetta.com/client-server-game-architecture.html"&gt;Explication&lt;/a&gt;). Tout en ayant une interface simple et d&amp;eacute;ployable sur un serveur externe en headless.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;Eacute;cran de d&amp;eacute;marrage serveur" class="center img-zoomable" height="400px" src="https://nightlyside.github.io/blog/images/projets/bataille-brestoise/console_serveur.png"/&gt;&lt;/p&gt;
&lt;p&gt;Pour se faire, en utilisant python le choix &amp;eacute;vident &amp;eacute;tait de se tourner vers la biblioth&amp;egrave;que &lt;code&gt;sockets&lt;/code&gt; pour cr&amp;eacute;er un tunnel TCP entre le client et le serveur.&lt;br/&gt;
Cependant son utilisation entra&amp;icirc;ne un probl&amp;egrave;me. Le tunnel ainsi cr&amp;eacute;e ne fonctionne qu'entre le serveur et un seul client. Or nous souhaitons pouvoir jouer en multijoueurs. Deux solutions sont disponibles : 
- Utiliser &lt;code&gt;sockets&lt;/code&gt; avec &lt;code&gt;selectors&lt;/code&gt; pour faire du multiplexage des entr&amp;eacute;es et ainsi avoir plusieurs clients connect&amp;eacute;s en m&amp;ecirc;me temps
- Utiliser la nouvelle biblioth&amp;egrave;que &lt;code&gt;asyncio&lt;/code&gt; apport&amp;eacute;e par python 3&lt;/p&gt;
&lt;p&gt;Nous avons d&amp;eacute;cid&amp;eacute; de partir sur la deuxi&amp;egrave;me solution, cette derni&amp;egrave;re prenant en charge le c&amp;ocirc;t&amp;eacute; asynchrone du serveur par le biais de deux nouveaux mots cl&amp;eacute;s : &lt;em&gt;async&lt;/em&gt; et &lt;em&gt;await&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A partir de la on peut commencer &amp;agrave; cr&amp;eacute;er un serveur prenant en charge la connexion de multiples clients et en leur associant un identifiant unique.&lt;/p&gt;
&lt;h3 id="les entites"&gt;Les entit&amp;eacute;s&lt;/h3&gt;
&lt;p&gt;Le serveur &amp;eacute;tant autoritaire c'est &amp;agrave; lui de g&amp;eacute;rer les entit&amp;eacute;s, par cons&amp;eacute;quent de g&amp;eacute;rer l'intelligence artificielle de ces derni&amp;egrave;res. Encore une fois plusieurs m&amp;eacute;thodes sont disponibles, mais celle qui m'a le plus attir&amp;eacute; est la machine &amp;agrave; &amp;eacute;tats-finis.&lt;br/&gt;
Pour les non initi&amp;eacute;s, la machine &amp;agrave; &amp;eacute;tats finis est un automate qui est dirig&amp;eacute; par l'&amp;eacute;tat dans lequel il se trouve actuellement. Ci-dessous, je vous pr&amp;eacute;sente le diagramme des &amp;eacute;tats r&amp;eacute;gissant l'intelligence artificielle des entit&amp;eacute;s.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Diagramme des &amp;eacute;tats des entit&amp;eacute;s" class="center img-zoomable" height="400px" src="https://nightlyside.github.io/blog/images/projets/bataille-brestoise/FSM.png"/&gt;&lt;/p&gt;
&lt;h2 id="le client_1"&gt;Le client&lt;/h2&gt;
&lt;p&gt;Pour la cr&amp;eacute;ation du client plusieurs biblioth&amp;egrave;ques graphiques sont &amp;agrave; notre disposition. Je pourrais citer par exemple tkinter, wxPython, pyQt ou m&amp;ecirc;me Kivy. Nous avons d&amp;eacute;cider de d&amp;eacute;velopper notre interface avec &lt;a href="https://fr.wikipedia.org/wiki/PyQt"&gt;PyQt5&lt;/a&gt; en raison de son outil &lt;em&gt;QtDesigner&lt;/em&gt; (un outil graphique pour g&amp;eacute;n&amp;eacute;rer des interfaces) et sa documentation tr&amp;egrave;s fournie. &lt;/p&gt;
&lt;p&gt;Le premier &amp;eacute;cran est celui de connexion au serveur. Les serveurs enregistr&amp;eacute;s sont affich&amp;eacute;s dans une liste et l'utilisateur peut choisir son pseudonyme.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;Eacute;cran de connexion client" class="center img-zoomable" height="400px" src="https://nightlyside.github.io/blog/images/projets/bataille-brestoise/start_screen.gif"/&gt;&lt;/p&gt;
&lt;p&gt;Une fois connect&amp;eacute;, un identifiant unique lui est attribu&amp;eacute; par le serveur afin de pouvoir se faire authentifier par le serveur ainsi que les autres clients. Cette &amp;eacute;tape r&amp;eacute;alis&amp;eacute;e, l'interface de jeu peut s'ouvrir, pr&amp;eacute;sentant l'aire de jeu, la carte (bas&amp;eacute;e sur la rade de Brest), les entit&amp;eacute;s ainsi que la ChatBox et le Radar.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ecran de jeu" class="center img-zoomable" height="400px" src="https://nightlyside.github.io/blog/images/projets/bataille-brestoise/demo_multi.gif"/&gt;&lt;/p&gt;
&lt;h3 id="le radar"&gt;Le radar&lt;/h3&gt;
&lt;p&gt;Le radar est l'un des &amp;eacute;l&amp;eacute;ments cl&amp;eacute;s du jeu. Il permet de d&amp;eacute;tecter les ennemis aux alentours et de transmettre la position relative au joueur.&lt;br/&gt;
Le fonctionnement est relativement simple : on parcoure les entit&amp;eacute;s pr&amp;eacute;sente sur le serveur et on ne garde que celles qui sont &amp;agrave; port&amp;eacute;e par un calcul de distance euclidienne. Ensuite on v&amp;eacute;rifie que l'entit&amp;eacute; soit pr&amp;eacute;sente sous le faisceau vert (voir image ci-dessous) pour &amp;ecirc;tre affich&amp;eacute;e &amp;agrave; l'&amp;eacute;cran, gr&amp;acirc;ce &amp;agrave; du calcul vectoriel.&lt;/p&gt;
&lt;p&gt;&lt;img alt="D&amp;eacute;monstration du Radar" class="center img-zoomable" height="300px" src="https://nightlyside.github.io/blog/images/projets/bataille-brestoise/radar.gif"/&gt;&lt;/p&gt;
&lt;h3 id="la documentation"&gt;La documentation&lt;/h3&gt;
&lt;p&gt;Pour ce projet, la r&amp;eacute;daction d'une documentation est n&amp;eacute;cessaire. Pour nous simplifier la t&amp;acirc;che, nous avons d&amp;eacute;cider de tout automatiser en utilisant &lt;a href="https://www.sphinx-doc.org"&gt;Sphinx&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Cet outil nous permet de g&amp;eacute;n&amp;eacute;rer automatiquement la documentation dans le style de Read-the-Docs en prenant la documentation &amp;eacute;crite dans les doc-strings du projet. Nous nous sommes tenu au mod&amp;egrave;le de Google concernant les doc-strings.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Documentation sur ReadTheDocs" class="center img-zoomable" height="400px" src="https://nightlyside.github.io/blog/images/projets/bataille-brestoise/docs_rtd.png"/&gt;&lt;/p&gt;
&lt;p&gt;Nous avons finalement upload&amp;eacute; la documentation sur ReadTheDocs, elle est disponible &amp;agrave; l'adresse : &lt;a href="https://la-bataille-brestoise.readthedocs.io/fr/latest/"&gt;https://la-bataille-brestoise.readthedocs.io/fr/latest/&lt;/a&gt;&lt;/p&gt;</content><category term="projets"></category><category term="python"></category><category term="IHM"></category><category term="Qt"></category></entry></feed>