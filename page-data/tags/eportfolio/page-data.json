{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/eportfolio/","result":{"data":{"site":{"siteMetadata":{"title":"Alexandre Froehlich"}},"allMarkdownRemark":{"totalCount":3,"edges":[{"node":{"excerpt":"Github est devenu très rapidement la référence en logiciel de gestion de développement. Aujourd’hui les projets open-source sont très nombreux sur la plateforme et de plus en plus d’entreprises demande aux candidats de leur fournir en plus de leur CV, leur compte Github afin de voir les projets du candidat ainsi que ses contributions au monde open-source. Créer un compte sur github Tout d’abord, il faut savoir que Github est gratuit. La fonctionnalité “Pro” ajoute certes quelques éléments intéressants mais qui ne sont pas utiles au jeune développeur. Si vous êtes étudiant vous pouvez obtenir un compte pro en passant par le pack éducation Pour créer un compte il suffit d’aller sur le site https://github.com/ et de renseigner les champs suivants.  Valider le compte Comme la plateforme est sérieuse et que le contenu publié est important pour les développeurs, il est nécessaire d’activer son compte avant de pouvoir continuer.\nIl s’agit donc de résoudre un petit puzzle pour valider le compte (surtout que vous n’êtes pas un robot). \nEnfin, cliquez sur join a free plan. N’oubliez pas de regarder vos mails pour activer votre compte. Quelques infos sur votre profil Pour pouvoir remplir un profil de base, l’étape suivante est de donner quelques détails sur votre formation de programmeur.\nEntre autres : le type de travail, l’expérience en programmation et l’utilisation prévue de Github. Personnellement étant un étudiant avec de l’expérience en programmation je coche : Student : I go to school A lot : I’m very experienced Host a project (repository), Create a website with GitHub Pages, School work and student projects Enfin dans mes intérêts j’indique comme langage (pour ma part) python, html, php, javascript. Cliquez sur Complete Setup. Les prochaines étapes Maintenant que vous avez un compte Github, voici quelques étapes que vous pouvez faire : Créer un repository et commencer un projet Collaborer sur un projet en commun Changer votre nom et votre avatar Héberger un site web avec GitHub Pages","fields":{"slug":"eportfolio/2020-06-29-creer-compte-github"},"frontmatter":{"date":"2020-06-29T12:00:00.000Z","title":"Comment créer un compte GitHub"}}},{"node":{"excerpt":"Avoir un site web à son nom est non seulement un gros plus dans le monde du numérique, mais il peut même être nécessaire pour décrocher certains emplois.\nGrâce à GitHub Pages il est facile de créer un site statique et de l’héberger sur leurs serveurs, c’est ce que nous allons voir dans cet article. Cet article suppose que vous avez déjà un compte GitHub.\nSi ce n’est pas le cas vous pouvez lire mon article sur comment créer un compte github Créer le repository La première étape consiste à créer le repository, le projet, qui contiendra les fichiers sur site.\nPour cela il suffit de cliquer sur le “plus” en haut à droite et de choisir New repository.  Attention le choix du nom est important ! Pour pouvoir profiter de github pages, le repository doit avoir un nom de la forme :  Exemple : mon pseudo pour ces articles sur Github est skycrawler67, le repository doit alors se nommer . Il faudra bien penser à mettre le repository en publique et pour nous simplifier la vie on va l’initialiser avec un README.\nEnfin, cliquez sur le bouton Create Repository pour créer le repository.  Activer l’hébergement par Github Pages Une fois les étapes précédentes réalisées vous devriez arriver sur la page principale de votre repository, vous montrant le contenu du fichier README ainsi que les fichiers présents dans ce projet. Pour activer l’hébergement sur Github Pages il faut aller dans les paramètres (cliquez sur l’engrenage) puis descendez jusqu’à la section “Github Pages”. Si toutes les étapes précédentes ont été suivies, le site nous explique que le site est bien publié à l’adresse correspondant au nom du repository. Si ce n’est pas le cas il vous faudra spécifier la branche que Github devra suivre pour la publication. La branch master (ou plus récemment main) est la plus communément utilisée, il s’agit de la branche principale.  Exemple : en suivant ce que j’ai écrit, mon site est alors publié sur https://skycrawler67.github.io/. Conclusion Pour vérifier que le site est bien en ligne il suffit de suivre le lien. Si tout s’est bien passé le lien affiche le contenu du fichier README.md. Il ne reste alors plus qu’à créer le site et l’envoyer sur ce repository pour qu’il soit publié sur la page. Pour aller plus loin : Créer un site web statique avec Jekyll/Hugo/Pelican (recommandé) Créer une landing page (page d’accueil) en HTML/CSS/JS avec par exemple Bootstrap Rédiger des articles, des postes, mettre son CV en ligne etc… Ce site à été uploadé sur GitHub Pages, je vous…","fields":{"slug":"eportfolio/2020-07-01-creer-un-site-github-pages"},"frontmatter":{"date":"2020-07-01T12:00:00.000Z","title":"Comment héberger un site web (simple) avec GitHub Pages"}}},{"node":{"excerpt":"Je l’ai déjà écrit mais avoir un site web pour se mettre en avant est nécessaire aujourd’hui. Les générateurs de contenu statique représentant le futur du web, nous allons voir comment concevoir un site web statique avec Pelican, un module pour python et l’intégrer dans GitHub Pages. Introduction Pour créer un site web il existe pleins de moyens différents. Pour les novices, des services graphiques sont proposés pour concevoir des sites web en 1 pages, pour les plus curieux il existe des CMS (Content Management System) qui permettent de de rédiger des articles et de gérer le contenu. Cependant cette dernière solution est souvent lourde (ex: Wordpress) et peut potentiellement présenter des failles. Un nouveau système est cependant en train de monter en puissance : les générateurs de contenus statiques. Pelican est l’un d’entre eux. On pourrait aussi citer par exemple Hugo (en Go) et Jekyll (en Ruby). Pour cet article je vais me concentrer sur Pelican. Qu’est-ce que Pelican ? « Pelican est un générateur de site statique, écrit en Python » Pour ceux qui ne savent pas ce qu’est un générateur de site statique voici le fonctionnement simplifié de la rédaction d’un article : Le contenu de l’article est rédigé en Markdown Pelican récupère ces fichiers et les transforme en page web en se basant sur des templates Le site web complet est disponible dans le dossier output Une fois les templates conçut, il est alors très simple de rajouter un article ou une page sur le site ! C’est la toute la puissance de ces générateurs : le contenu est compilé et statique donc l’accès au site est très rapide et il n’y a pas de failles car le code source du site (les fichiers markdown et la configuration) ne sont pas directement accessibles. Aussi est-ce que je vous ai parlé des plugins ? Pelican peut être amélioré en fonctions grâce aux plugins disponibles ici (vous même pouvez créer un plugin assez facilement) Création du projet Tout d’abord il faut installer Pelican. Je suppose que vous avez déjà python 3 installé sur votre machine avec pip. Pour installer Pelican il suffit de lancer la commande (avec support pour les fichiers Markdown): Ensuite créer un dossier qui contiendra votre site web et entrez dedans.\nOn va maintenant créer le squelette du site à l’aide de la commande .  Renseignez tous les champs demandé. Pour information ce qui est renseigné entre les crochets est la valeur par défaut si vous n’entrez rien.\nAttention : n’oubliez pas de dire oui à la question sur Github…","fields":{"slug":"eportfolio/2020-07-02-creer-un-site-statique-avec-pelican"},"frontmatter":{"date":"2020-07-02T12:00:00.000Z","title":"Comment créer un site web statique avec Pelican"}}}]}},"pageContext":{"tag":"eportfolio"}},"staticQueryHashes":["3433897746","712016698","781468736"]}