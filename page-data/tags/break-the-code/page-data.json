{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/break-the-code/","result":{"data":{"site":{"siteMetadata":{"title":"Alexandre Froehlich"}},"allMarkdownRemark":{"totalCount":3,"edges":[{"node":{"excerpt":"Il semblerait qu’un fragment de clé soit caché dans cet exercice. Je me permets de vous partager un classique revisité récemment par l’une de mes séries favorites. This is Suzie, I copy. Suzie! Dusty-bun!? Look at what you see.\nBut not only !\nWhat is the secret of the never ending story ?\nM. X. (-..-) Faut pas chercher midi à quatorze heures mais plutôt Samuel à midi ! P.S : Samuel est un morse, choisi lui la bonne piste ! Le Challenge “Break the Code” est une compétition du type Capture The Flag (CTF) organisée par Sopra Steria qui dure 1h30. Les équipes des grandes écoles du bassin brestois s’y affrontent sur des challenges informatiques. Ces challenges mélangent différentes compétences telles que la programmation, l’analyse de donnée et la culture du numérique. Analyse du premier fichier L’histoire sans fin est la 3ème épreuve de ce CTF, le but étant de trouver le drapeau qui est caché dans les fichiers de l’épreuve. Si vous voulez essayer par vous-même, les fichiers de cet exercice sont disponibles ici. On arrive sur une première difficulté. Les deux fichiers fournis ne présentant pas d’extension, c’est à nous d’en retrouver le type. Pour cela plusieurs méthodes. La première est la lecture du code source. Pour le fichier , une simple ouverture avec un bloc notes nous donne un indice :  La deuxième méthode est l’utilisation sous linux de la commande file :  Une troisième méthode est l’utilisation de sites web détecteurs de types de fichiers tel que ChekFileType.com. On reconnait que le fichier inconnu est une image au format JPEG. Il suffit alors j’ajouter  au nom du fichier pour en découvrir le contenu :  On obtient le premier indice qui nous permettra de résoudre le challenge, on aura affaire à du morse. Analyse du second fichier Avec le second fichier, certaines méthodes présentées précédemment ne pourront pas fonctionner. En effet, en essayant d’ouvrir le fichier avec un bloc note, le contenu reste illisible à l’œil nu. Pour trouver le type de fichier, la seconde comme la troisième méthode montrent qu’il s’agit d’un fichier MIDI, audio donc.  Mon premier réflexe est alors de rajouter l’extension  au fichier et de l’écouter pour voir si je ne peux pas récupérer d’autres indices. (petit moment gênant du au fait que tout le monde était concentré dans son épreuve et que je joue un morceau de musique à fond sur les hauts parleurs de mon pc portable). Malheureusement l’écoute de ce fichier ne me donne absolument aucun indice. Je repense alors au format du…","fields":{"slug":"writeups/2020-01-01-btc-morse"},"frontmatter":{"date":"2020-01-01T12:00:00.000Z","title":"[BTC] L'Histoire sans fin - WriteUp"}}},{"node":{"excerpt":"En fouillant dans la clé USB, vous tombez sur un dossier contenant un morceau d’annuaire téléphonique, et un fichier contenant des instructions. “Depuis quelques mois, un de mes collègues me harcèle et j’ai peur qu’il finisse par me faire du mal. Des fois qu’il tomberait sur ce document, je préfère ne pas le citer directement …” Aidez la police en trouvant l’identité de la personne dont M. X parle. Le Challenge Break the Code est une compétition du type Capture The Flag (CTF) organisée par Sopra Steria qui dure 1h30. Les équipes des grandes écoles du bassin brestois s’y affrontent sur des challenges informatiques. Ces challenges mélangent différentes compétences telles que la programmation, l’analyse de donnée et la culture du numérique. Première Analyse Nombre heureux est la 7ème épreuve de ce CTF, le but étant de trouver un numéro de téléphone présent dans l’annuaire de l’exercice. Si vous voulez essayer par vous-même, les fichiers de cet exercice sont disponibles ici. Pour retrouver ce numéro l’exercice nous donne des instructions, il s’agit de la somme des nombres qui remplissent les conditions suivantes : être compris entre 0 et 200 000 inclus être heureux être impair être premier Comme Break The Code est une compétition de rapidité, pour le prototypage de l’algorithme j’ai décidé de choisir python. Conception de l’algorithme Nombre heureux L’exercice nous définit un nombre heureux de la sorte :\nPartant de n’importe quel entier positif, remplacer cet entier par la somme des carrés des chiffres qui le composent, et répéter le processus jusqu’à ce que le nombre soit égal à 1 (auquel cas le nombre est qualifié de “heureux”). Si le processus boucle (i.e. on repasse sur un nombre déja obtenu lors d’une étape précédente), alors le chiffre n’est pas “heureux” et le processus peut être stoppé. Un algorithme naïf est une fonction récursive permettant de déterminer si le nombre est heureux ou non : La méthode que je recommande dans ce genre de cas (pour des calculs “classiques”) est de chercher un algorithme préfait sur internet.\nPar exemple celui-ci fera très bien l’affaire et pourra vous faire gagner 10-15 minutes sur l’exercice. Nombre impair et premier En python la syntaxe pour vérifier si un nombre est impair est très simple : Pour savoir si il est premier, le plus rapide sera de chercher un algorithme préfait sur internet. Dans le contexte de cet exercice j’ai utilisé celui-ci. Ecriture de la boucle Il ne reste plus qu’à itérer sur chaque nombre et de…","fields":{"slug":"writeups/2020-01-01-nombre-heureux"},"frontmatter":{"date":"2020-01-01T12:00:00.000Z","title":"[BTC] Nombre heureux - WriteUp"}}},{"node":{"excerpt":"Lettre de M. X : À ma chère famille, Ave, Si vous recevez cette lettre, c’est qu’il m’est arrivé quelque chose. J’imagine, avide d’argent comme vous êtes, que vous souhaitez plutôt mettre la main sur ma fortune plutôt que de dépenser votre énergie pour me retrouver. Celà ne m’arrange pas car j’aimerai plutôt être secouru. Enfin, vous savez comme je suis prévoyant, j’ai tout prévu. En échange de prévenir les forces de l’ordre, je vous propose le contenu de mon portefeuille numérique. Aujourd’hui, il devrait être valorisé à plusieurs millions si le cours ne s’est pas effondré. Je vous lègue cette clé U.S.B où j’ai dissimulé plusieurs énigmes menant à des framgents qui vous permettront de reconstituer ma clé privée vous permettant d’accéder à ce portefeuille. Pour aider les enquêteurs, j’y ai également introduis plusieurs éléments sur où je me trouvais et avec qui je me trouvais avant que cette clé ne soit envoyée. Pour être sûr que vous contactiez réellement les forces de l’ordre, toute information est cachée. Je doute que vous parviendrez par vous-mêmes à résoudre une quelconque de ces énigmes, alors entourez-vous des meilleurs enquêteurs. Pour commencer, je vous propose de déchiffrer le contenu du message que je vous ai laissé (encrypted.txt). Sachez que César, à son époque, utilisait ce même système pour communiquer avec ses généraux. Je n’ai pas changé la clé, mais l’alphabet est bien différent. Et il pourrait bien être juste sous vos yeux. M. X Le Challenge Break the Code est une compétition du type Capture The Flag (CTF) organisée par Sopra Steria qui dure 1h30. Les équipes des grandes écoles du bassin brestois s’y affrontent sur des challenges informatiques. Ces challenges mélangent différentes compétences telles que la programmation, l’analyse de donnée et la culture du numérique. Première Analyse Ce premier exercice permettait pendant la compétition de débloquer les challenges suivants. Il était donc primordial de le réussir le plus rapidement possible de manière à gagner un maximum de temps et de points. Si vous voulez essayer par vous-même, les fichiers de cet exercice sont disponibles ici. Le contenu de l’exercice est composé d’un fichier README.md et d’un texte encrypté : La suite du fichier README nous explique comment fonctionne le chiffrement par substitution. Si vous ne savez pas ce que c’est je vous invite à lire cet article. Ensuite est venue ma première erreur. Le document parle de chiffrement par décalage d’alphabet, j’ai évidemment…","fields":{"slug":"writeups/2020-01-05-warm-up"},"frontmatter":{"date":"2020-01-05T12:00:00.000Z","title":"[BTC] Warm Up - WriteUp"}}}]}},"pageContext":{"tag":"break-the-code"}},"staticQueryHashes":["3433897746","712016698","781468736"]}