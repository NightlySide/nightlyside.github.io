{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/python/","result":{"data":{"site":{"siteMetadata":{"title":"Alexandre Froehlich"}},"allMarkdownRemark":{"totalCount":16,"edges":[{"node":{"excerpt":"Les chatbots commerciaux sont de plus en plus présents sur les sites de grande distribution ou de services à grande échelle. Je me suis demandé à quel point il était facile de concevoir un chatbox vocal en utilisant python et Dialogflow. Le code du projet est disponible sur github : https://github.com/NightlySide/ChatBox-Vocal Comme tout projet, il faut pouvoir trouver un point d’entrée afin de ne pas se perdre. Je décide donc de commencer par traduire du français oral en texte. Le speech to text Python étant très versatile et surtout très populaire, il existe une multitude de bibliothèques pour faire de la traduction de vocal vers texte. N’en connaissant aucun, j’ai cherché à savoir parmi toutes ces bibliothèques, lesquelles fonctionnaient pour une traduction en français. Je me suis arrêté sur Speech-Recognition qui me semble bien fourni en documentation, qui fonctionne avec diverses API de reconnaissance de texte, mais surtout qui comprend bien le français ! Un premier script permet d’essayer cette fonctionnalité en écoutant puis en traduisant ce qui a été dit : Il ne reste plus qu’à tout mettre dans une fonction, ou plutôt dans une classe en ajoutant les fonctions d’écoute en arrière plan avec une fonction “callback”. Le code final pour cette classe est le suivant : Maintenant le programme est capable d’écouter en arrière plan, de détecter une phrase et de la convertir en texte, ici grâce à l’API de google. Le text to speech Afin de pouvoir parler de chatbot vocal, il est intéressant de faire “parler” la machine. De même je vais chercher une bibliothèque capable de parler en français pour des raisons évidentes.\nPour commencer j’ai décidé d’utiliser Google Text-to-speech par sa simplicité et sa popularité. Plus tard il serait intéressant d’enregistrer moi même les phrases surtout si le chatbot vocal possède une quantité réduite de mots.\nPour jouer le son je voulais au départ utiliser PyAudio, j’ai choisi sur une bibliothèque bien plus simple à utiliser : playsound qui est en plus cross platform ! Le code simple pour faire une phrase est le suivant : Il est bien mieux d’utiliser  pour supprimer un fichier que  Il ne reste plus qu’à créer la fonction correspondante, pas besoin de créer une classe ici. Finalement la fonction devient la suivante : J’en ai profité pour ajouter un nom de fichier aléatoire pour éviter le cas ou la fonction est appelée plusieurs fois en même temps, à l’aide d’un UUID. La conversation Pour créer un chatbot un minimum intelligent…","fields":{"slug":"2020-06-26-chatbot-vocal"},"frontmatter":{"date":"2020-06-26T12:00:00.000Z","title":"Un chatbot vocal en python"}}},{"node":{"excerpt":"Après avoir réalisé pendant le 1er confinement une application basique en python pour trouver des recettes en fonction des ingrédients présent dans son frigo (le projet est expliqué ici : a-chef-in-the-fridge), je souhaite pousser le concept pour avoir une application complète et fonctionnelle.  Cependant la façon dont je l’ai précédemment conçue ne me plait pas. Bootstrap est trop lourd sans retirer le code inutile (voir l’élimination de code inutile sur Wikipedia), et la communication entre la base de donnée et l’application n’est pas très sécurisée, d’autant plus que le backend, codé en PHP n’est vraiment pas satisfaisant sur de nombreux points. Planification Bad programmers worry about the code. Good programmers worry about data structures and their relationship.\n— Linus Torvalds Un peu à la manière de ces mots, je vais d’abord fixer la structure du projet et les liens entre chacune des parties avant de commencer à coder. Pour cela je vais d’abord devoir fixer des objectifs, ou plutôt des exigences. Cahier des charges L’application peut très vite devenir large et je risque fortement de me perdre dans les fonctionnalités. Avec ma compagne nous avons donc défini des exigences minimales pour sortir un produit viable. Pour trouver ces exigences on peut commencer par la phrase ”L’application doit” : permettre à un utilisateur de donner les ingrédients qu’il a et retourner des recettes en conséquence enregistrer et afficher des recettes tirées d’internet ou enregistrées par les utilisateurs être accessible sur un navigateur web (et pourquoi pas une application mobile) à n’importe quel moment Structure Pour répondre à ces exigences il faut penser à la façon dont le projet va s’articuler. Quelles sont les briques nécessaires à la réalisation de ce projet ? Faisons la liste des élements nécessaires. On va pouvoir ensuite les mettre sur un schéma qui donnera leurs relations respectives. Il nous faut : Un moyen d’enregistrer des données (pour les recettes et les ingrédients) -> exigence 1 Un moyen de traiter les données, d’y accéder, de chercher des recettes à partir d’ingrédients et d’enregistrer des recettes -> exigence 2 Une interface utilisateur pour accéder à ces données et les modifier -> exigence 3 Maintenant que ces éléments sont listés, je dessine le schéma :  Choix des technologies Je pars avec une bonne idée de ce que je souhaite d’un point de vue technologies. Pour la base de données j’hésite encore entre une solution sur Firebase avec le free tier…","fields":{"slug":"devlogs/2020-12-26-chef-in-fridge-v2-introduction"},"frontmatter":{"date":"2020-12-26T20:06:00.000Z","title":"Planification d'un projet : A Chef in the Fridge v2"}}},{"node":{"excerpt":"Si le titre vous rend confus c’est peut être normal. Je vais essayer d’expliquer ce qu’est le scraping et le parsing que j’ai utilisé dans le cadre de mon projet: A Chef in the Fridge v2. Motivation Dans ma précédente itération, les recettes étaient entrées à la main à partir des ingrédients déjà présent dans la base de données. Non seulement cette solution n’était clairement pas intuitive et lente, mais elle est trop peu flexible 🤢. Pour cette itération je souhaite pouvoir importer automatiquement une recette depuis n’importe quel site le permettant (comme Marmiton ou 750g). Pour cela j’ai besoin de deux outils : Un scraper pour récupérer les données de la page web de la recette Un parser pour convertir les ingrédients en objets que le serveur pourra comprendre Le scraper de recettes On va commencer par les bases avant d’attaquer le sujet. Qu’est-ce qu’un scraper ? “Le web scraping (parfois appelé harvesting) est une technique d’extraction du contenu de sites Web, via un script ou un programme, dans le but de le transformer pour permettre son utilisation dans un autre contexte.”\n— Wikipedia Autrement dit, un scraper permet de récupérer les informations d’un site comme les objets présents sur la page ou les métadonnées. Cela se fait très simplement sur Python avec les bibliothèques  (intégrée) et . Prenons l’exemple de cette recette sur marmiton concernant un cake au poires et au chocolat: https://www.marmiton.org/recettes/recette_cake-aux-poires-et-chocolat-fondant_38922.aspx. On peut récupérer le contenu de la page à l’aide des lignes suivantes : Une histoire de méta(données) Une autre chose intéressante est que les sites de recettes, pour optimiser leur classement sur les moteurs de recherche (voir Search Engine Optimization), utilisent de nombreuses méta-données et il y en a une conçue spécialement pour les recettes. Le site schema.org décrit la structure des méta-données qui concernent les recettes ici. Pour commencer ces métadonnées sont présentes dans une balise  contenant un objet JSON décrivant la recette. Essayons pour voir sur notre lien précédent : Si on essaye d’afficher le contenu de la variable  on obtient ceci : On peut maintenant récupérer les ingrédients, le temps de préparation, le nombre de personnes, les notes et les étapes de préparation de la recette et tout cela en ne cherchant que dans l’en-tête de la page ! What a time to be alive Mais nouveau problème 😢 comment faire pour que le serveur comprenne “150 g de farine” ou “1…","fields":{"slug":"devlogs/2020-12-27-recette-ingredient-parser"},"frontmatter":{"date":"2020-12-27T20:10:00.000Z","title":"Scraper de recettes et parser d'ingrédients"}}},{"node":{"excerpt":"Dans ma précédente itération du projet ”A Chef in the Fridge” l’utilisateur devait rentrer manuellement le nom et le type des ingrédients que sa recette utilise. Alors non seulement cela était très lourd pour l’utilisateur, surtout en ce qui concerne la recherche des informations sur la composition des ingrédients. Nous allons voir comment automatiser tout ça dans ce post. Le jeu de données Ciqual Pour commencer il nous faut une source de données à partir de laquelle on va baser toute notre optimisation. En cherchant sur le site data.gouv.fr je suis tombé sur la ”Table de composition nutritionnelle des aliments Ciqual“. Qu’est-ce que Ciqual ? Il s’agit d’une table recensant près de 2800 aliments, crée par l’ANSES (Agence Nationale de SÉcurité Sanitaire, alimentation, environnement, travail). On peut retrouver dans cette tables des aliments ainsi que leur composition. Et tout ça en source ouverte ! Les données fournies par Ciqual se décompose en 5 fichiers :  : données des aliments  : données des groupes alimentaires  : constantes pour la composition (glucides, énergie, …)  : données de la composition des aliments  : sources des données de composition de chaque aliment Pour comprendre comment sont stockées ces données, Ciqual met à disposition une documentation plutôt détaillée. Format des données Avant de pouvoir utiliser ces données il est intéressant de jeter un oeil à la façon dont elles sont enregistrées. Par exemple un aliment ressemble à la structure suivante : Une composition d’une constante pour un ingrédient donné ressemble à la structure suivante : Il est évident que l’on ne peut pas utiliser les données telles quelles. De plus essayer de charger complètement les 2800 aliments avec une vingtaine de compositions différentes devient très lourd en mémoire (près de 800Mo de RAM utilisée pour un programme rédigé avec Python). La solution pour résoudre ces deux problèmes ? Une base de données relationnelle. On va donc ici aussi utiliser une base de données spécifiquement pour les ingrédients. La base de données Création de la bdd Pour cette base de données je vais utiliser une fois de plus SQLite avec pour ORM SQLAlchemy. Pour rappel un ORM est : “un type de programme informatique qui se place en interface entre un programme applicatif et une base de données relationnelle pour simuler une base de données orientée objet” — Wikipedia  On peut alors avec python créer une base de données (fichier ) et l’initialiser simplement avec le code suivant : Vous…","fields":{"slug":"devlogs/2021-01-02-a-chef-in-fridge-v2-ciqual"},"frontmatter":{"date":"2021-01-02T11:54:00.000Z","title":"Composition des ingrédients avec les données Ciqual"}}},{"node":{"excerpt":"Github est devenu très rapidement la référence en logiciel de gestion de développement. Aujourd’hui les projets open-source sont très nombreux sur la plateforme et de plus en plus d’entreprises demande aux candidats de leur fournir en plus de leur CV, leur compte Github afin de voir les projets du candidat ainsi que ses contributions au monde open-source. Créer un compte sur github Tout d’abord, il faut savoir que Github est gratuit. La fonctionnalité “Pro” ajoute certes quelques éléments intéressants mais qui ne sont pas utiles au jeune développeur. Si vous êtes étudiant vous pouvez obtenir un compte pro en passant par le pack éducation Pour créer un compte il suffit d’aller sur le site https://github.com/ et de renseigner les champs suivants.  Valider le compte Comme la plateforme est sérieuse et que le contenu publié est important pour les développeurs, il est nécessaire d’activer son compte avant de pouvoir continuer.\nIl s’agit donc de résoudre un petit puzzle pour valider le compte (surtout que vous n’êtes pas un robot). \nEnfin, cliquez sur join a free plan. N’oubliez pas de regarder vos mails pour activer votre compte. Quelques infos sur votre profil Pour pouvoir remplir un profil de base, l’étape suivante est de donner quelques détails sur votre formation de programmeur.\nEntre autres : le type de travail, l’expérience en programmation et l’utilisation prévue de Github. Personnellement étant un étudiant avec de l’expérience en programmation je coche : Student : I go to school A lot : I’m very experienced Host a project (repository), Create a website with GitHub Pages, School work and student projects Enfin dans mes intérêts j’indique comme langage (pour ma part) python, html, php, javascript. Cliquez sur Complete Setup. Les prochaines étapes Maintenant que vous avez un compte Github, voici quelques étapes que vous pouvez faire : Créer un repository et commencer un projet Collaborer sur un projet en commun Changer votre nom et votre avatar Héberger un site web avec GitHub Pages","fields":{"slug":"eportfolio/2020-06-29-creer-compte-github"},"frontmatter":{"date":"2020-06-29T12:00:00.000Z","title":"Comment créer un compte GitHub"}}},{"node":{"excerpt":"Avoir un site web à son nom est non seulement un gros plus dans le monde du numérique, mais il peut même être nécessaire pour décrocher certains emplois.\nGrâce à GitHub Pages il est facile de créer un site statique et de l’héberger sur leurs serveurs, c’est ce que nous allons voir dans cet article. Cet article suppose que vous avez déjà un compte GitHub.\nSi ce n’est pas le cas vous pouvez lire mon article sur comment créer un compte github Créer le repository La première étape consiste à créer le repository, le projet, qui contiendra les fichiers sur site.\nPour cela il suffit de cliquer sur le “plus” en haut à droite et de choisir New repository.  Attention le choix du nom est important ! Pour pouvoir profiter de github pages, le repository doit avoir un nom de la forme :  Exemple : mon pseudo pour ces articles sur Github est skycrawler67, le repository doit alors se nommer . Il faudra bien penser à mettre le repository en publique et pour nous simplifier la vie on va l’initialiser avec un README.\nEnfin, cliquez sur le bouton Create Repository pour créer le repository.  Activer l’hébergement par Github Pages Une fois les étapes précédentes réalisées vous devriez arriver sur la page principale de votre repository, vous montrant le contenu du fichier README ainsi que les fichiers présents dans ce projet. Pour activer l’hébergement sur Github Pages il faut aller dans les paramètres (cliquez sur l’engrenage) puis descendez jusqu’à la section “Github Pages”. Si toutes les étapes précédentes ont été suivies, le site nous explique que le site est bien publié à l’adresse correspondant au nom du repository. Si ce n’est pas le cas il vous faudra spécifier la branche que Github devra suivre pour la publication. La branch master (ou plus récemment main) est la plus communément utilisée, il s’agit de la branche principale.  Exemple : en suivant ce que j’ai écrit, mon site est alors publié sur https://skycrawler67.github.io/. Conclusion Pour vérifier que le site est bien en ligne il suffit de suivre le lien. Si tout s’est bien passé le lien affiche le contenu du fichier README.md. Il ne reste alors plus qu’à créer le site et l’envoyer sur ce repository pour qu’il soit publié sur la page. Pour aller plus loin : Créer un site web statique avec Jekyll/Hugo/Pelican (recommandé) Créer une landing page (page d’accueil) en HTML/CSS/JS avec par exemple Bootstrap Rédiger des articles, des postes, mettre son CV en ligne etc… Ce site à été uploadé sur GitHub Pages, je vous…","fields":{"slug":"eportfolio/2020-07-01-creer-un-site-github-pages"},"frontmatter":{"date":"2020-07-01T12:00:00.000Z","title":"Comment héberger un site web (simple) avec GitHub Pages"}}},{"node":{"excerpt":"Je l’ai déjà écrit mais avoir un site web pour se mettre en avant est nécessaire aujourd’hui. Les générateurs de contenu statique représentant le futur du web, nous allons voir comment concevoir un site web statique avec Pelican, un module pour python et l’intégrer dans GitHub Pages. Introduction Pour créer un site web il existe pleins de moyens différents. Pour les novices, des services graphiques sont proposés pour concevoir des sites web en 1 pages, pour les plus curieux il existe des CMS (Content Management System) qui permettent de de rédiger des articles et de gérer le contenu. Cependant cette dernière solution est souvent lourde (ex: Wordpress) et peut potentiellement présenter des failles. Un nouveau système est cependant en train de monter en puissance : les générateurs de contenus statiques. Pelican est l’un d’entre eux. On pourrait aussi citer par exemple Hugo (en Go) et Jekyll (en Ruby). Pour cet article je vais me concentrer sur Pelican. Qu’est-ce que Pelican ? « Pelican est un générateur de site statique, écrit en Python » Pour ceux qui ne savent pas ce qu’est un générateur de site statique voici le fonctionnement simplifié de la rédaction d’un article : Le contenu de l’article est rédigé en Markdown Pelican récupère ces fichiers et les transforme en page web en se basant sur des templates Le site web complet est disponible dans le dossier output Une fois les templates conçut, il est alors très simple de rajouter un article ou une page sur le site ! C’est la toute la puissance de ces générateurs : le contenu est compilé et statique donc l’accès au site est très rapide et il n’y a pas de failles car le code source du site (les fichiers markdown et la configuration) ne sont pas directement accessibles. Aussi est-ce que je vous ai parlé des plugins ? Pelican peut être amélioré en fonctions grâce aux plugins disponibles ici (vous même pouvez créer un plugin assez facilement) Création du projet Tout d’abord il faut installer Pelican. Je suppose que vous avez déjà python 3 installé sur votre machine avec pip. Pour installer Pelican il suffit de lancer la commande (avec support pour les fichiers Markdown): Ensuite créer un dossier qui contiendra votre site web et entrez dedans.\nOn va maintenant créer le squelette du site à l’aide de la commande .  Renseignez tous les champs demandé. Pour information ce qui est renseigné entre les crochets est la valeur par défaut si vous n’entrez rien.\nAttention : n’oubliez pas de dire oui à la question sur Github…","fields":{"slug":"eportfolio/2020-07-02-creer-un-site-statique-avec-pelican"},"frontmatter":{"date":"2020-07-02T12:00:00.000Z","title":"Comment créer un site web statique avec Pelican"}}},{"node":{"excerpt":"Nous allons voir comment construire une machine virtuelle capable d’interpréter des instructions et de modifier les valeurs des registres en conséquence. Cet article a vu le jour suite au cours sur les architectures numériques de l’ENSTA Bretagne et grâce à l’article très complet (en Anglais) ”VM in C” Conception du programme Choix d’un jeu d’instructions Nous allons commencer par le programme puisque c’est ce que l’on souhaite exécuter après tout. Pour le jeu d’instructions j’ai choisi d’implémenter une partie du jeu d’instructions MISC (Minimal Instruction Set Computer) :  Ce choix est motivé par le fait que ce jeu minimaliste reste le plus simple à implémenter (peu d’instructions égal moins de travail pour avoir un MVP) Adresses de registre Tout registre et toute variable en mémoire possède une adresse. Pour la machine virtuelle on va devoir décider d’une façon de gérer cet espace mémoire.  On va commencer par quelque chose de simple et placer les register dans un tableau. Ainsi l’adresse du registre sera son index dans le tableau des registres. Cela est amplement suffisant pour un simulateur, mais devra être repensé pour une architecture embarquée. Structure d’une instruction Comment écrire une instruction ? On verra plus tard que pour traduire du texte vers un code que la machine pourra interpréter on devra passer par un lexer et un parser (ce qui sort du domaine de cet article). Pour l’instant voici à quoi va ressembler une instruction, les données étant en hexadécimal :  L’exemple précédent permet d’additionner les valeurs contenues dans les registres 2 et 5 et d’assigner la valeur au registre 1 : . Cet exemple est équivalent pour toutes les instructions à 3 arguments. Comment écrire une instruction à seulement 2 arguments ? On garde la même structure de données sauf que cette fois-ci on prend les 2 derniers caractères que l’on considère être 1 seul argument :  Ce qui correspond à l’assignation d’un entier à un registre : . Il ne reste plus qu’à coder la machine virtuelle maintenant que l’on connaît la structure des instructions ! La machine virtuelle N’importe quel langage de programmation peut être utilisé pour programmer la machine virtuelle qui nous servira de simulation. On a peut être plus intérêt à prendre un langage compilé pour optimiser les performances de la simulation. J’ai choisi python pour voir la différence avec l’article cité plus haut. Python étant un langage orienté objet, ma machine virtuelle sera donc un objet. On commence alors…","fields":{"slug":"python/2021-01-13-vm-in-python"},"frontmatter":{"date":"2021-01-13T18:32:00.000Z","title":"Machine virtuelle en Python"}}},{"node":{"excerpt":"Nous allons maintenant améliorer la machine virtuelle que l’on a conçut dans l’article précédent et ajoutant des fonctionnalités et en redéfinissant les objectifs attendus. Pour suivre cet article je vous recommande vivement mon premier article ”Machine virtuelle en Python” qui explique comment concevoir une machine virtuelle en python. Cahier des charges Pour pouvoir redéfinir nos objectifs proprement il est important de fixer quelques exigences puis d’y répondre par le code une à une. Le but est à la fin d’avoir une instruction qui tient sur 32 bits (soit 8 bits en hexadécimal) afin de respecter différentes conventions en place dans les architectures processeur (32 bits). Les instructions Commençons par les instructions. Pour rappel ou souhaite implémenter le jeu d’instructions MISC (Minimal Instruction Set Computer) :  Au total nous avons 19 instructions. Si on souhaite attribuer un numéro par instruction il nous faudra donc des numéros allant de 0 à 18. Nos instructions étant codées en héxadécimal, il nous faudra 2 bits en hexadécimal pour représenter les 19 possibilités. (il nous restera alors  instructions disponibles.) Les arguments On a vu dans le jeu d’instruction que les instructions pouvaient prendre 0 (stop) à 3 (add, …) arguments. On remarque dans le jeu d’instructions que les arguments peuvent être des registres ou bien des constantes. Cependant on ne peut avoir qu’une seule constante par opération : On a déjà 2 bits sur les 8 qui sont pris pour le numéro d’instruction. Il nous en reste donc 6. Si on a 3 arguments on aura 2 bits par argument. Or  possibilités donc on pourra avoir au plus 256 registres. Et surtout on pourra additionner le contenu d’un registre avec un constante faisant au plus 255. Si on a 2 arguments (par exemple pour charger une constante dans un registre) on aura alors  possibilités pour le registre mais  possibilités pour la constante ! C’est déjà mieux. Les registres Continuons avec les registres. On peut se poser la question suivante : quelle est la taille maximale d’un objet ? Elle est directement conditionnée par les arguments et le nombre de bits disponibles dans l’instruction. On a vu précédemment qu’on ne pouvait utiliser que 256 registres. Et que la taille maximale d’une constante était de 65535 pour un entier non signé. Donc chaque registre devra être de taille  bits ou encore  bits en hexadécimal. Structure d’une instruction En se référant à toutes les exigences que l’on a détaillé précédemment, on arrive à la…","fields":{"slug":"python/2021-01-14-better-vm-python"},"frontmatter":{"date":"2021-01-14T13:08:00.000Z","title":"Amélioration de la machine virtuelle"}}},{"node":{"excerpt":"Le trafic routier est probablement l’un des plus grands fléaux du quotidien. Nous faisant perdre un temps considérable, réduisant la productivité et poussant à des comportements dangereux, les embouteillages représentent un facteur déterminant dans les accidents de la route. Alors qu’ils se produisent presque quotidiennement chaque jour sur certaines routes, et ce depuis des décennies, il serait enfin temps d’envisager une solution pour s’en débarrasser. Avant-propos Ce que je vais m’efforcer de décrire au cours des prochains posts est la démarche que mon binôme (Kieran D.) et moi-même avons entrepris afin de reproduire les conditions d’un bouchon routier, puis d’étudier l’impact de la création d’une déviation sur un tel embouteillage. Cette démarche n’est probablement pas la plus réaliste des simulations et le résultat obtenu pourrait éventuellement différer de ce que nous avons mesuré. Le but étant de se rapprocher un maximum d’un cas concret afin d’avoir une idée générale des solutions à notre disposition pour régler le problème du trafic routier. Comment se crée un embouteillage ? On vient à peine de commencer à réfléchir au sujet qu’on fait déjà face à une première barrière. Comment se crée un bouchon routier ? La question a déjà été pensée, réfléchie, retournée. L’APRR (Autoroutes Paris-Rhin-Rhône) aborde la question dans cet article et définie l’embouteillage : La route est comme un « tuyau » qui ne peut faire passer plus d’un « flux » maximal de véhicules. À cette limite physique s’ajoute le temps de réaction des conducteurs, qui répercutent avec un léger décalage le coup de frein du conducteur qui les précède. Et redémarrent ensuite avec un nouveau temps de retard. Lorsque la circulation est dense, cela suffit à engendrer un bouchon : les temps de retard s’ajoutent les uns aux autres, aboutissant parfois à une perturbation de grande ampleur. Expliquée autrement, il suffit qu’un conducteur adopte un mode de conduite qui sortirait de la “conduite de croisière”, en changeant de voie rapidement par exemple ou encore en ralentissant dans une ligne droite tandis qu’aucun obstacle ne lui fait face.  Comment traduire ces éléments On peut alors commencer à faire une liste des éléments à prendre en compte dans notre étude : les voitures ont une vitesse maximale imposée la voiture peut ralentir à tout moment quel que soit la route (facteur aléatoire) si la voiture rencontre un croisement elle peut emprunter l’un ou l’autre chemin Ainsi que quelques…","fields":{"slug":"tipe/2017-11-29-un-probleme-de-route-demarche"},"frontmatter":{"date":"2017-11-29T12:00:00.000Z","title":"[TIPE] Un problème de route - La démarche (1/4)"}}},{"node":{"excerpt":"Nous allons maintenant modéliser le trafic routier pour une portion de route, en respectant les hypothèses données et décrites dans le dernier post. Pour cela on procède en 3 étapes : on crée un modèle basique à une dimension, puis on l’étend à 2 dimensions et on ajoute en dernière étape les déviations et intersections. Ce post correspond à la première phase. La question qui m’a le plus souvent été posée lorsque je décrivais mon projet à mes camarades de classe était la suivante : Mais comment est-ce que tu choisis l’endroit où va se produire l’embouteillage ? A cette question je leur réponds simplement que je ne choisis pas ! En effet, le but de cette modélisation est de faire en sorte que les voitures, par leur comportement, créent une congestion. Le comportement de base des voitures En suivant l’idée du sujet de concours CCP 2017 (concours d’entrée aux écoles d’ingénieur), on peut décrire le comportement des voitures simplement en décomposant un instant t en plusieurs étapes, en mettant à jour leur vitesse. Cette méthode de simulation s’appelle aussi la simulation de Nagel et Schreckenberg. Accélération La première étape consiste à accélérer le véhicule d’une case par unité de temps. Cela correspond à une phase normale d’accélération. On limite cependant la vitesse à la vitesse maximale de la route. Décélération La seconde étape consiste à faire ralentir le véhicule si la vitesse actuelle le fait rentrer en collision avec un autre véhicule. Pour se faire, on calcule la distance entre le véhicule et le précédent et on le compare à la vitesse actuelle. Si le véhicule est trop loin, le véhicule roule à la même vitesse, mais s’il est trop proche, le véhicule avance jusqu’à coller le véhicule devant lui, sa vitesse en sera diminuée pour simuler un freinage. Facteur aléatoire Cette étape correspond au ralentissement aléatoire qui peut survenir en tout temps. Pour expliquer le réalisme d’une telle opération, il faut s’imaginer rouler sur une autoroute droite sans personne dessus à part un véhicule qui roule (sans régulateur de vitesse bien sûr). Alors il peut survenir un moment d’inattention qui va faire ralentir aléatoirement le conducteur. C’est ce phénomène qui est représenté par cette étape, il se trouve d’ailleurs que pour cette simulation, cette étape est celle qui crée les embouteillages routiers. Déplacement Cette dernière étape permet d’inscrire le mouvement lié à la vitesse de chaque véhicule. C’est à dire qu’après avoir fait la mise à jour de toutes…","fields":{"slug":"tipe/2017-12-01-un-probleme-de-route-modele-info"},"frontmatter":{"date":"2017-12-01T12:00:00.000Z","title":"[TIPE] Un problème de route - Le modèle informatique (2/4)"}}},{"node":{"excerpt":"La deuxième étape consiste à passer la simulation à deux dimensions en vue d’implémenter les déviations et intersections. On peut encore séparer cette étape en plusieurs sous-étapes : création d’une grille qui va accueillir la route, à la manière d’un plateau contenant des cartes ou des jetons, puis création de la route et finalement adaptation des véhicules au nouveau système de route en 2 dimensions. Création de la grille A quoi devra ressembler la grille ? Pour répondre à cette question on pose les conditions de déroulement de la simulation : la grille devra contenir W cases en largeur et H cases en hauteur la simulation comportera T itérations Alors la grille sera représentée par un tableau à 3 dimensions de taille  alors  retournera l’état de la grille à l’instant . Avec le système actuel d’exportation de tableau qui consiste à attribuer une couleur par case (0 pour blanc, 1 pour vert et 2 pour orange pale) avec chaque couleur associée à un élément de la simulation (respectivement vide, route et véhicule). Le code ci-dessus retournera une grille de la bonne taille. Le remplissage étant aléatoire pour mettre en évidence la structure de la grille, un exemple est le suivant :  Création de la route On entame dès à présent une des parties des plus compliquées avec la création de la route. On définit la route comme étant l’ensemble des positions prises par un chemin pour aller d’un point A à un point B.  En prenant les coordonnées de  et  alors le chemin correspondant sera : Algorithme Pour créer la route on initialise un tableau contenant les positions de chaque case. On commence par la case du début puis on choisis la prochaine de façon relativement simple, on sera probablement amené qu’à créer des droites ou des angles droits, il n’est donc pas nécessaire de se compliquer la tâche. Une fois qu’on est arrivée à la dernière case on retourne la liste crée. A partir de cet algorithme on peut maintenant créer une nouvelle fonction qui prendra une liste de positions par lesquelles le chemin devra passer et qui retournera un tel chemin. Comme on suppose le tracé global simple, on segmente le chemin en traçant la route entre 2 positions à chaque fois. A noter qu’écrire  permet de donner autant d’argument à la fonction qu’on le souhaite Par exemple écrire le code ci-dessous : Correspondra à la grille suivante :  Faire avancer les voitures Maintenant qu’on a la grille ainsi que la route qui la parcourt, il est temps de faire avancer les voiture. Pour cela on…","fields":{"slug":"tipe/2017-12-02-un-probleme-de-route-passage-2D"},"frontmatter":{"date":"2017-12-02T12:00:00.000Z","title":"[TIPE] Un problème de route - Passage en 2D (3/4)"}}},{"node":{"excerpt":"Dernière ligne droite pour le modèle informatique. La dernière étape consiste à implémenter les carrefours, les déviations et les intersections. On se place toujours dans les hypothèses mises en place dans l’explication de la démarche. Mais leur implémentation n’est pas facile à se représenter. Durant la phase de développement, on a fait face à de nombreux problèmes, voici comment on les a résolu. Réécriture des représentations des voitures, chemins et de la grille L’ancienne représentation (à l’aide de tableau) n’est probablement pas la meilleure solution à considérer pour la compréhension et la lisibilité de l’algorithme. Pour cela on utilisera les classes (notion hors programme de PSI en CPGE), pour plus d’information ce cours publié sur OpenClassroom explique mieux ce concept que je ne pourrais le faire. Les voitures Une des raisons pour lesquelles nous allons utiliser les classes est que cela facilite la compréhension. En effet pour récupérer la vitesse d’une voiture avant il fallait récupérer une entrée d’un tableau correspondant à ladite voiture. En utilisant les classes on utilise maintenant la méthode . Ainsi, on crée chaque voiture en lui donnant le nombre d’itérations que la simulation va calculer afin de stocker toutes les positions et vitesses pour les analyser. On lui donne le chemin sur lequel elle va évoluer ainsi que sa position initiale et la vitesse maximale à laquelle et pourra circuler. Le reste sera géré par la simulation. La carte et ses routes De même on retranscrit le code précédent en quelque chose de plus exploitable. En effet, il est plus simple d’écrire  pour modifier la carte en ajoutant une voiture à l’instant t. De même pour les routes : Le problème de l’ancienne simulation L’ancienne simulation fonctionnait bien lorsqu’il n’y avait qu’une seule voiture sur la route. Cependant, la voiture, face à une bifurcation va choisir aléatoirement une route ou l’autre. Nous l’avions codé de cette manière, mais nous voulons que la circulation ne se fasse que dans un sens pour pouvoir analyser la vitesse et la densité des voitures. Problème Pour résoudre ce problème, une solution (celle que j’ai choisi), est de numéroter chaque case de la route, ainsi le sens de circulation sera donné par des indices de case croissants. C’est à dire que le chemin du post précédent devient maintenant : Utilisation du nouveau code Quelques procédures et fonctions bien utiles Depuis le début de ces posts, je vous ai présenté des images, du texte…","fields":{"slug":"tipe/2017-12-09-un-probleme-de-route-final"},"frontmatter":{"date":"2017-12-09T12:00:00.000Z","title":"[TIPE] Un problème de route - Le final (4/4)"}}},{"node":{"excerpt":"Un petit bonus pour ce projet. Je cherche maintenant à représenter la vitesse de chaque véhicule afin d’avoir une idée plus précise sur la fluidité du trafic routier. Il y a certes peu de modifications à faire, mais cela en vaut le coup. Pourquoi une telle représentation L’idée m’est venue en lisant des articles sur la représentation de Nagel-Schreckenberg. Après avoir flâné quelques temps sur Wikipédia, j’ai décidé de changer la langue de la page afin de voir si d’autres contributeurs non francophones avaient étoffés leur page plus que ça n’est le cas sur celle française. A ma grande surprise, la page allemande du model de Nagel Schreckenberg montre une représentation du modèle plutôt ingénieuse : donner une couleur par véhicule en fonction de la vitesse de circulation de celui-ci. (voir figure ci-dessous)  Maintenant on va modifier le code source de notre étude afin d’y implémenter cette nouvelle fonctionnalité. Implémentation La première étape est de modifier la fonction qui place les véhicules. En effet, précédemment, pour placer une voiture sur la carte, la simulation ajoutait un *2 sur la case correspondante. Maintenant nous allons remplacer la fonction placerVoiture de la classe Carte par le bout de code suivant : La seule grande différence est que l’on calcule la valeur de la case par . Cela nous amène à notre seconde modification, en effet, pour détecter la présence d’une voiture, on récupérait la valeur d’une case de la carte que l’on comparait à 2. On remplace alors toutes les occurrences par  ce qui permettra de détecter la présence d’une voiture quelque soit sa vitesse. Affichage On a maintenant l’ajout des vitesses des voitures sur la carte, il est grand temps de les afficher ! Pour cela on change légèrement la liste des couleurs de matplotlib.pyplot par : Ainsi une voiture à l’arrêt sera de couleur jaune et tendra vers le rouge en accélérant, puis sera noire à vitesse maximale. Le seul problème avec matplotlib est que si il n’y a pas au moins une occurrence de chaque couleur, il n’affichera pas correctement la couleur de la route et des véhicules. On ajoute alors à la représentation de la carte une unique ligne de pixels contenant toutes les valeurs de la vitesse afin quelles soient toutes représentées : C’est tout ce qu’il y avait à faire !! (oui j’ai passé près de 2 heures sur ces modifications) Le résultat est vraiment satisfaisant par contre.","fields":{"slug":"tipe/2018-03-21-un-probleme-de-route-bonus"},"frontmatter":{"date":"2018-03-21T12:00:00.000Z","title":"[TIPE] Un problème de route - Bonus"}}},{"node":{"excerpt":"Souhaitant manger de façon plus équilibrée et ne sachant pas toujours quelle recette faire avec les ingrédients présents dans mon frigo, j’ai décidé de concevoir une application qui résout ce problème. L’application est disponible publiquement ici : https://a-chef-in-the-fridge.herokuapp.com/\nLe code source est disponible sur mon repository github : https://github.com/NightlySide/AChefInTheFridge Le cahier des charges Je souhaite que cette application réponde à plusieurs besoins. Voici la liste succincte : Proposer une recette en fonction des ingrédients présents dans mon frigo Pouvoir préparer les menus pour une semaine Afficher un semainier avec la liste des recettes disponibles Imprimer (en PDF) la liste de courses à faire Afficher les informations complémentaires sur la qualité des recettes Un grand livre de recettes numérique Toute l’application se base sur des ingrédients et des recettes enregistrées par les utilisateurs. Pour les stocker, je suis tout d’abord passé par un stockage fichier en utilisant le format JSON. Cependant, après avoir déployé l’application sur la plateforme Heroku, qui recharge les fichiers à l’original dès lors que la plateforme n’est plus utilisée, les recettes sont perdues. La solution ? Une base de données MySQL sur un autre serveur. Ainsi, j’ai une base de données contenant une table des recettes et une table des ingrédients. L’avantage de cette structure est que les données sont accessibles depuis n’importe quelle plateforme pouvant faire des requêtes SQL, et de pouvoir plus tard implémenter la gestion des utilisateurs et des éditeurs sur la plateforme. Affichage des recettes Pour pouvoir remplir le premier point de mon cahier des charges, j’ai besoin de créer une interface permettant d’ajouter les ingrédients présents dans son frigo.  L’auto-complétion est réalisée en effectuant une requête AJAX au changement du contenu de la zone d’ajout de l’ingrédient. Calcul du score Le plus important avec cette application est de pouvoir trouver la recette dans laquelle il manque le moins possible d’ingrédients. Pour se faire, j’ai crée un score pour chaque recette qui dépends directement des ingrédients ajoutés par l’utilisateur.  Afin que le score soit cohérent, la recette indique la quantité nécessaire pour chaque ingrédients. par exemple pour un plat de pâtes, avoir dans son frigo les 200g nécessaire de pâtes donnera un plus grand score que juste la pincée de sel pour assaisonner le plat. J’ai donc mis en place un système de…","fields":{"slug":"a-chef-in-the-fridge"},"frontmatter":{"date":"2020-06-21T12:00:00.000Z","title":"A Chef in the fridge"}}},{"node":{"excerpt":"Dans le cadre de mes études d’ingénieur à l’ENSTA Bretagne, j’ai réalisé à l’aide de mon binôme un projet de fin de cycle en python avec pour objectif d’y intégrer de la programmation orientée objet ainsi que de l’interface homme machine.\n“La bataille brestoise” est le projet que nous avons codé sur près de 3 mois. Il s’agit d’un jeu en réseau de bataille navale en temps réel basé sur la rade de Brest ainsi que sur les bâtiments de la Marine Nationale. Le projet est disponible sur mon repo (installation et utilisation) : https://github.com/NightlySide/La-Bataille-Brestoise Introduction L’objectif initial du projet était de mettre à profit le cours vu sur la programmation orientée objet ainsi que les bases de l’Interface Homme-Machine (IHM). Cependant, avec mon binôme nous avons souhaité pousser le projet plus loin en y intégrant par exemple une connexion clients-serveur et des machines à état finis pour faire de l’intelligence artificielle. Nous avons donc décidé de partir sur le développement d’un jeu de bataille navale en temps réel, inspiré de jeux en .io tel que le célèbre agar.io, dont les bâtiments sont inspirés de la Marine Nationale.\nDans ce jeu, le but sera d’atteindre le niveau 5 en éliminant les adversaires (IA et joueurs réels) pour obtenir des points d’expérience. Si le joueur décède, il réapparaît avec un bâtiment de niveau inférieur.\nDes commandes sont disponibles pour le client et pour le serveur de manière à pouvoir intéragir avec le jeu. De plus une chatbox est mise à disposition des joueurs pour la communication entre les joueurs et la communication des informations sur la partie. L’équilibrage du jeu est obtenu par deux étapes, la première étant un calcul bète et méchant de dégâts par seconde. Les résultats condensés dans un tableau excel permettent de mettre en avant cet équilibrage. La deuxième étape consiste à tester les réglages en jeu. Equilibrage des bâtiments Pour ce jeu, on a tout d’abord commencé par la création du serveur. Le serveur Nous souhaitions implémente une structure de serveur autoritaire et de clients simples (Explication). Tout en ayant une interface simple et déployable sur un serveur externe en headless. Écran de démarrage serveur Pour se faire, en utilisant python le choix évident était de se tourner vers la bibliothèque  pour créer un tunnel TCP entre le client et le serveur.\nCependant son utilisation entraîne un problème. Le tunnel ainsi crée ne fonctionne qu’entre le serveur et un seul client. Or nous…","fields":{"slug":"la-bataille-brestoise"},"frontmatter":{"date":"2020-06-15T12:00:00.000Z","title":"La Bataille Brestoise"}}}]}},"pageContext":{"tag":"python"}},"staticQueryHashes":["3433897746","712016698","781468736"]}