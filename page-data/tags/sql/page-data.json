{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/sql/","result":{"data":{"site":{"siteMetadata":{"title":"Alexandre Froehlich"}},"allMarkdownRemark":{"totalCount":2,"edges":[{"node":{"excerpt":"Le projet a été planifié dans l’article précédent. Je vais maintenant me concentrer sur la base de données ainsi que les objets que je vais stocker dans cette base de données. Choix de la technologie Quand il s’agit de choisir une technologie pour les bases de données, on est confronté à un très large choix. Que ce soit pour des structures “classiques” comme MySQL, ou des technologies plus modernes se basant sur du NoSQL comme Firebase avec leur système de collection, il devient difficile de faire un choix. Mon application sera relativement simple d’un point de vu données. Stocker la base de données sur la même machine que le serveur ne me pose pas de problème, ce qui ouvre encore plus mon choix des possibles 😅. Dans l’introduction j’expliquais hésiter entre Firebase et SQLite. Cependant plusieurs arguments me font pencher vers SQLite comme le fait que j’hébergerais en local cette solution (donc gratuit 🤑) et le fait d’avoir un fichier physique pour la base de donnée me permettra de faire des sauvegardes plus facilement.  Je vais implémenter une base de données SQLite en fichier local sur la même machine que le serveur de backend. Types des données S’agissant d’une application pour chercher et afficher des recettes à partir d’ingrédient, cela sera les deux premiers objets à créer. Les ingrédients Dans ma précédente itération de l’application, l’ingrédient était une structure d’objet complexe. On devait y définir son nom et aussi ses caractéristiques (lipide, glucide, etc…) je souhaitais ainsi pouvoir donner des informations nutritionnelles sur les plats ajoutés. Cependant j’ai découvert il y a peu les jeux de données disponibles publiquement sur le site du gouvernement français : https://www.data.gouv.fr/fr/. Ainsi je pense pouvoir récupérer les qualités nutritionnelles des ingrédients présents dans Ciqual, en téléchargeant le jeu de données sur le site data.gouv.fr.  L’utilisateur n’aura plus à rentrer manuellement les informations, elles seront récupérées automatiquement depuis les informations enregistrée dans la table de données. L’ingrédient devra alors contenir les informations suivantes :  : pour identifier l’ingrédient dans la base de données  : le nom de l’ingrédient  : les proteines pour 100g  : les glucides pour 100g  : les lipides pour 100g  : l’énergie en kcal pour 100g Les recettes Voila le coeur de fonctionnement de l’application : les recettes. Dans l’ancienne itération les recettes étaient malheureusement entrées à la main à partir des…","fields":{"slug":"devlogs/2020-12-27-chef-in-fridge-v2-database"},"frontmatter":{"date":"2020-12-27T09:28:00.000Z","title":"Base de données et objets : A Chef in the Fridge v2"}}},{"node":{"excerpt":"Dans ma précédente itération du projet ”A Chef in the Fridge” l’utilisateur devait rentrer manuellement le nom et le type des ingrédients que sa recette utilise. Alors non seulement cela était très lourd pour l’utilisateur, surtout en ce qui concerne la recherche des informations sur la composition des ingrédients. Nous allons voir comment automatiser tout ça dans ce post. Le jeu de données Ciqual Pour commencer il nous faut une source de données à partir de laquelle on va baser toute notre optimisation. En cherchant sur le site data.gouv.fr je suis tombé sur la ”Table de composition nutritionnelle des aliments Ciqual“. Qu’est-ce que Ciqual ? Il s’agit d’une table recensant près de 2800 aliments, crée par l’ANSES (Agence Nationale de SÉcurité Sanitaire, alimentation, environnement, travail). On peut retrouver dans cette tables des aliments ainsi que leur composition. Et tout ça en source ouverte ! Les données fournies par Ciqual se décompose en 5 fichiers :  : données des aliments  : données des groupes alimentaires  : constantes pour la composition (glucides, énergie, …)  : données de la composition des aliments  : sources des données de composition de chaque aliment Pour comprendre comment sont stockées ces données, Ciqual met à disposition une documentation plutôt détaillée. Format des données Avant de pouvoir utiliser ces données il est intéressant de jeter un oeil à la façon dont elles sont enregistrées. Par exemple un aliment ressemble à la structure suivante : Une composition d’une constante pour un ingrédient donné ressemble à la structure suivante : Il est évident que l’on ne peut pas utiliser les données telles quelles. De plus essayer de charger complètement les 2800 aliments avec une vingtaine de compositions différentes devient très lourd en mémoire (près de 800Mo de RAM utilisée pour un programme rédigé avec Python). La solution pour résoudre ces deux problèmes ? Une base de données relationnelle. On va donc ici aussi utiliser une base de données spécifiquement pour les ingrédients. La base de données Création de la bdd Pour cette base de données je vais utiliser une fois de plus SQLite avec pour ORM SQLAlchemy. Pour rappel un ORM est : “un type de programme informatique qui se place en interface entre un programme applicatif et une base de données relationnelle pour simuler une base de données orientée objet” — Wikipedia  On peut alors avec python créer une base de données (fichier ) et l’initialiser simplement avec le code suivant : Vous…","fields":{"slug":"devlogs/2021-01-02-a-chef-in-fridge-v2-ciqual"},"frontmatter":{"date":"2021-01-02T11:54:00.000Z","title":"Composition des ingrédients avec les données Ciqual"}}}]}},"pageContext":{"tag":"sql"}},"staticQueryHashes":["3433897746","712016698","781468736"]}