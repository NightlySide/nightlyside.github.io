<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alexandre Froehlich</title><link href="https://nightlyside.github.io/new/blog/" rel="alternate"></link><link href="https://nightlyside.github.io/new/blog/feeds/all.atom.xml" rel="self"></link><id>https://nightlyside.github.io/new/blog/</id><updated>2020-01-05T00:00:00+01:00</updated><entry><title>[BTC] Warm Up - WriteUp</title><link href="https://nightlyside.github.io/new/blog/writeups/btc-warm-up-writeup/" rel="alternate"></link><published>2020-01-05T00:00:00+01:00</published><updated>2020-01-05T00:00:00+01:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2020-01-05:/new/blog/writeups/btc-warm-up-writeup/</id><summary type="html">
&lt;p&gt;Si vous recevez cette lettre, c'est qu'il m'est arrivé quelque chose. J'imagine, avide d'argent comme vous êtes, que vous souhaitez plutôt mettre la main sur ma fortune plutôt que de dépenser votre énergie pour me retrouver. Celà ne m'arrange pas car j'aimerai plutôt être secouru. Enfin, vous savez comme je suis prévoyant, j'ai tout prévu.
&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lettre de M. X :&lt;/p&gt;
&lt;p&gt;&amp;Agrave; ma ch&amp;egrave;re famille,&lt;/p&gt;
&lt;p&gt;Ave,&lt;/p&gt;

&lt;p&gt;Si vous recevez cette lettre, c'est qu'il m'est arriv&amp;eacute; quelque chose. J'imagine, avide d'argent comme vous &amp;ecirc;tes, que vous souhaitez plut&amp;ocirc;t mettre la main sur ma fortune plut&amp;ocirc;t que de d&amp;eacute;penser votre &amp;eacute;nergie pour me retrouver. Cel&amp;agrave; ne m'arrange pas car j'aimerai plut&amp;ocirc;t &amp;ecirc;tre secouru. Enfin, vous savez comme je suis pr&amp;eacute;voyant, j'ai tout pr&amp;eacute;vu.
&lt;/p&gt;
&lt;p&gt;En &amp;eacute;change de pr&amp;eacute;venir les forces de l'ordre, je vous propose le contenu de mon portefeuille num&amp;eacute;rique. Aujourd'hui, il devrait &amp;ecirc;tre valoris&amp;eacute; &amp;agrave; plusieurs millions si le cours ne s'est pas effondr&amp;eacute;.&lt;/p&gt;
&lt;p&gt;Je vous l&amp;egrave;gue cette cl&amp;eacute; U.S.B o&amp;ugrave; j'ai dissimul&amp;eacute; plusieurs &amp;eacute;nigmes menant &amp;agrave; des framgents qui vous permettront de reconstituer ma cl&amp;eacute; priv&amp;eacute;e vous permettant d'acc&amp;eacute;der &amp;agrave; ce portefeuille. Pour aider les enqu&amp;ecirc;teurs, j'y ai &amp;eacute;galement introduis plusieurs &amp;eacute;l&amp;eacute;ments sur o&amp;ugrave; je me trouvais et avec qui je me trouvais avant que cette cl&amp;eacute; ne soit envoy&amp;eacute;e. Pour &amp;ecirc;tre s&amp;ucirc;r que vous contactiez r&amp;eacute;ellement les forces de l'ordre, toute information est cach&amp;eacute;e. Je doute que vous parviendrez par vous-m&amp;ecirc;mes &amp;agrave; r&amp;eacute;soudre une quelconque de ces &amp;eacute;nigmes, alors entourez-vous des meilleurs enqu&amp;ecirc;teurs.&lt;/p&gt;
&lt;p&gt;Pour commencer, je vous propose de d&amp;eacute;chiffrer le contenu du message que je vous ai laiss&amp;eacute; (encrypted.txt). Sachez que C&amp;eacute;sar, &amp;agrave; son &amp;eacute;poque, utilisait ce m&amp;ecirc;me syst&amp;egrave;me pour communiquer avec ses g&amp;eacute;n&amp;eacute;raux. Je n'ai pas chang&amp;eacute; la cl&amp;eacute;, mais l'alphabet est bien diff&amp;eacute;rent. Et il pourrait bien &amp;ecirc;tre juste sous vos yeux.&lt;/p&gt;
&lt;p&gt;M. X&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Le Challenge Break the Code est une comp&amp;eacute;tition du type Capture The Flag (CTF) organis&amp;eacute;e par &lt;a href="https://www.soprasteria.com/fr"&gt;Sopra Steria&lt;/a&gt; qui dure 1h30. Les &amp;eacute;quipes des grandes &amp;eacute;coles du bassin brestois s&amp;rsquo;y affrontent sur des challenges informatiques. Ces challenges m&amp;eacute;langent diff&amp;eacute;rentes comp&amp;eacute;tences telles que la programmation, l&amp;rsquo;analyse de donn&amp;eacute;e et la culture du num&amp;eacute;rique. &lt;/p&gt;
&lt;h2 id="premiere analyse"&gt;Premi&amp;egrave;re Analyse&lt;/h2&gt;
&lt;p&gt;Ce premier exercice permettait pendant la comp&amp;eacute;tition de d&amp;eacute;bloquer les challenges suivants. Il &amp;eacute;tait donc primordial de le r&amp;eacute;ussir le plus rapidement possible de mani&amp;egrave;re &amp;agrave; gagner un maximum de temps et de points.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Si vous voulez essayer par vous-m&amp;ecirc;me, les fichiers de cet exercice sont &lt;a href="https://nightlyside.github.io/new/blog/files/BTC/warm-up.zip"&gt;disponibles ici.&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Le contenu de l'exercice est compos&amp;eacute; d'un fichier README.md et d'un texte encrypt&amp;eacute; : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ZURAS&lt;/span&gt; &lt;span class="n"&gt;NLYUG&lt;/span&gt; &lt;span class="n"&gt;YEFPYIYPUG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MY&lt;/span&gt; &lt;span class="n"&gt;HSPIY&lt;/span&gt; &lt;span class="n"&gt;FPY&lt;/span&gt; &lt;span class="n"&gt;CR&lt;/span&gt; &lt;span class="n"&gt;JRCQXXY&lt;/span&gt; &lt;span class="n"&gt;RQI&lt;/span&gt; &lt;span class="n"&gt;UYPGGQ&lt;/span&gt; &lt;span class="n"&gt;YXXY&lt;/span&gt; &lt;span class="n"&gt;CYCY&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;HYNLQJJUYU&lt;/span&gt; &lt;span class="n"&gt;NY&lt;/span&gt; &lt;span class="n"&gt;CYGGRKY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="n"&gt;YGI&lt;/span&gt; &lt;span class="n"&gt;DSPUFPSQ&lt;/span&gt; &lt;span class="n"&gt;MY&lt;/span&gt; &lt;span class="n"&gt;ASPG&lt;/span&gt; &lt;span class="n"&gt;JYXQNQIY&lt;/span&gt; &lt;span class="n"&gt;DYUGSEEYXXYCYEI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;MY&lt;/span&gt; &lt;span class="n"&gt;GPQG&lt;/span&gt; &lt;span class="n"&gt;YCZYIY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MY&lt;/span&gt; &lt;span class="n"&gt;EY&lt;/span&gt; &lt;span class="n"&gt;DYPB&lt;/span&gt; &lt;span class="n"&gt;HYASQXYU&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;CR&lt;/span&gt; &lt;span class="n"&gt;JRCQXXY&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="n"&gt;RJJRQUY&lt;/span&gt; &lt;span class="n"&gt;GPU&lt;/span&gt; &lt;span class="n"&gt;XRFPYXXY&lt;/span&gt; &lt;span class="n"&gt;MY&lt;/span&gt; &lt;span class="n"&gt;GPQG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;CRQG&lt;/span&gt; &lt;span class="n"&gt;MY&lt;/span&gt; &lt;span class="n"&gt;GPQG&lt;/span&gt; &lt;span class="n"&gt;RPMSPUH&lt;/span&gt; &lt;span class="n"&gt;LPQ&lt;/span&gt; &lt;span class="n"&gt;QENRDRZXY&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="n"&gt;CY&lt;/span&gt; &lt;span class="n"&gt;XQZYUYU&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="n"&gt;YEHUSQI&lt;/span&gt; &lt;span class="n"&gt;SP&lt;/span&gt; &lt;span class="n"&gt;MY&lt;/span&gt; &lt;span class="n"&gt;GPQG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="n"&gt;DSPU&lt;/span&gt; &lt;span class="n"&gt;NSEARQENUY&lt;/span&gt; &lt;span class="n"&gt;CR&lt;/span&gt; &lt;span class="n"&gt;JRCQXXY&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="k"&gt;C&lt;/span&gt; &lt;span class="n"&gt;RQHYU&lt;/span&gt; &lt;span class="n"&gt;YI&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="n"&gt;JQERENYU&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="n"&gt;YEFPYIY&lt;/span&gt; &lt;span class="n"&gt;DSPU&lt;/span&gt; &lt;span class="n"&gt;CY&lt;/span&gt; &lt;span class="n"&gt;UYIUSPAYU&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;RQ&lt;/span&gt; &lt;span class="n"&gt;HQGGQCPXYU&lt;/span&gt; &lt;span class="n"&gt;FPRIUY&lt;/span&gt; &lt;span class="n"&gt;JURKCYEIG&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="n"&gt;NXY&lt;/span&gt; &lt;span class="n"&gt;DYUCYIIREI&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="n"&gt;UYNSEGIQIPYU&lt;/span&gt; &lt;span class="n"&gt;XR&lt;/span&gt; &lt;span class="n"&gt;NXY&lt;/span&gt; &lt;span class="n"&gt;JQERXY&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;NYG&lt;/span&gt; &lt;span class="n"&gt;JURKCYEIG&lt;/span&gt; &lt;span class="n"&gt;GSEI&lt;/span&gt; &lt;span class="n"&gt;NSEIYEPG&lt;/span&gt; &lt;span class="n"&gt;DRU&lt;/span&gt; &lt;span class="n"&gt;XYG&lt;/span&gt; &lt;span class="n"&gt;YEQKCYG&lt;/span&gt; &lt;span class="n"&gt;DUYGYEIYG&lt;/span&gt; &lt;span class="n"&gt;HREG&lt;/span&gt; &lt;span class="n"&gt;XR&lt;/span&gt; &lt;span class="n"&gt;NXY&lt;/span&gt; &lt;span class="n"&gt;PGZ&lt;/span&gt; &lt;span class="n"&gt;FPY&lt;/span&gt; &lt;span class="n"&gt;MY&lt;/span&gt; &lt;span class="n"&gt;ASPG&lt;/span&gt; &lt;span class="n"&gt;RQ&lt;/span&gt; &lt;span class="n"&gt;RHUYGGYY&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;DSPU&lt;/span&gt; &lt;span class="n"&gt;ASPG&lt;/span&gt; &lt;span class="n"&gt;RQHYT&lt;/span&gt; &lt;span class="n"&gt;HREG&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="n"&gt;YEFPYIY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;RQ&lt;/span&gt; &lt;span class="n"&gt;YKRXYCYEI&lt;/span&gt; &lt;span class="n"&gt;HQGGQCPXYU&lt;/span&gt; &lt;span class="n"&gt;XY&lt;/span&gt; &lt;span class="n"&gt;XQYP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="n"&gt;QHYEIQIY&lt;/span&gt; &lt;span class="n"&gt;YI&lt;/span&gt; &lt;span class="n"&gt;XY&lt;/span&gt; &lt;span class="n"&gt;EPCYUS&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="n"&gt;IYXYDLSEY&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="n"&gt;XR&lt;/span&gt; &lt;span class="n"&gt;DYUGSEEY&lt;/span&gt; &lt;span class="n"&gt;RAYN&lt;/span&gt; &lt;span class="n"&gt;FPQ&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;RARQG&lt;/span&gt; &lt;span class="n"&gt;UYEHYT&lt;/span&gt; &lt;span class="n"&gt;ASPG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;XR&lt;/span&gt; &lt;span class="n"&gt;NXY&lt;/span&gt; &lt;span class="n"&gt;PGZ&lt;/span&gt; &lt;span class="n"&gt;YGI&lt;/span&gt; &lt;span class="n"&gt;AYUUSPQXXYY&lt;/span&gt; &lt;span class="n"&gt;ASQNQ&lt;/span&gt; &lt;span class="n"&gt;XY&lt;/span&gt; &lt;span class="n"&gt;JXRK&lt;/span&gt; &lt;span class="n"&gt;DYUCYIIREI&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="n"&gt;SPAUQU&lt;/span&gt; &lt;span class="n"&gt;SDYEILRIDREHSURZSB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;ESIY&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NYNQ&lt;/span&gt; &lt;span class="n"&gt;YGI&lt;/span&gt; &lt;span class="n"&gt;XR&lt;/span&gt; &lt;span class="n"&gt;UYDSEGY&lt;/span&gt; &lt;span class="n"&gt;FPY&lt;/span&gt; &lt;span class="n"&gt;ASPG&lt;/span&gt; &lt;span class="n"&gt;HYAYT&lt;/span&gt; &lt;span class="n"&gt;HSEEYU&lt;/span&gt; &lt;span class="n"&gt;RP&lt;/span&gt; &lt;span class="n"&gt;MPKY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NY&lt;/span&gt; &lt;span class="n"&gt;JXRK&lt;/span&gt; &lt;span class="n"&gt;DYUCYI&lt;/span&gt; &lt;span class="n"&gt;YKRXYCYEI&lt;/span&gt; &lt;span class="n"&gt;HY&lt;/span&gt; &lt;span class="n"&gt;HYAYUSPQXXYU&lt;/span&gt; &lt;span class="n"&gt;XY&lt;/span&gt; &lt;span class="n"&gt;JQNLQYU&lt;/span&gt; &lt;span class="n"&gt;TQD&lt;/span&gt; &lt;span class="n"&gt;PGZNSEIYEIG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La suite du fichier README nous explique comment fonctionne le chiffrement par substitution. Si vous ne savez pas ce que c'est je vous invite &amp;agrave; lire &lt;a href="http://bibmath.net/crypto/index.php?action=affiche&amp;amp;quoi=substi/defsub"&gt;cet article&lt;/a&gt;. Ensuite est venue ma premi&amp;egrave;re erreur. Le document parle de chiffrement par d&amp;eacute;calage d'alphabet, j'ai &amp;eacute;videmment pens&amp;eacute; tout de suite au &lt;a href="https://fr.wikipedia.org/wiki/Chiffrement_par_d%C3%A9calage"&gt;chiffre de C&amp;eacute;sar&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Petite astuce&lt;/strong&gt; : pour cracker un code chiffr&amp;eacute; par d&amp;eacute;calage du type chiffre de C&amp;eacute;sar, de nombreux sites web permettent de "bruteforcer" le code. Vous pourrez par exemple prendre &lt;a href="https://www.dcode.fr/chiffre-cesar"&gt;dcode.fr&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En testant le code crypt&amp;eacute; ci-dessus sur ces sites on ne trouve rien de coh&amp;eacute;rent, rien de lisible. C'est l&amp;agrave; que j'ai rep&amp;eacute;r&amp;eacute; mon erreur.&lt;/p&gt;
&lt;h2 id="deuxieme analyse et implementation"&gt;Deuxi&amp;egrave;me analyse et impl&amp;eacute;mentation&lt;/h2&gt;
&lt;p&gt;Comment faire pour cracker un code chiffr&amp;eacute; par substitution lorsqu'on ne connait par le nouvel alphabet ? C'est simple si le texte est assez long (et c'est le cas ici), on a juste besoin de connaitre la &lt;a href="https://fr.wikipedia.org/wiki/Fr%C3%A9quence_d%27apparition_des_lettres_en_fran%C3%A7ais"&gt;fr&amp;eacute;quence d'apparition des lettres en fran&amp;ccedil;ais&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="affichage"&gt;Affichage&lt;/h3&gt;
&lt;p&gt;De mani&amp;egrave;re na&amp;iuml;ve, le plus simple pour trouver un message est d'afficher graphiquement ce que l'on a d&amp;eacute;j&amp;agrave; trouv&amp;eacute;. Pour ce faire, on repr&amp;eacute;sentera les lettres que l'on a d&amp;eacute;j&amp;agrave; trouv&amp;eacute;. Les caract&amp;egrave;res sp&amp;eacute;ciaux tels que l'espace, les apostrophes seront aussi repr&amp;eacute;sent&amp;eacute;s tels quels. Enfin les caract&amp;egrave;re que l'on ne connait pas seront remplac&amp;eacute;s par des _.&lt;/p&gt;
&lt;p&gt;Au point de vue code python cela donne ceci :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;affiche_decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trouve&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{}):&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Si on connait la traduction&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;trouve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;trouve&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="c1"&gt;# Si le caract&amp;egrave;re fait partie des sp&amp;eacute;ciaux&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;","&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;":"&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt;
        &lt;span class="c1"&gt;# Sinon on ne le connait pas&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;"_"&lt;/span&gt;
    &lt;span class="c1"&gt;# On retourne le texte formatt&amp;eacute;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On n'oublie juste pas de prendre en compte le fait que &lt;code&gt;trouve&lt;/code&gt; est un dictionnaire dont chaque cl&amp;eacute; correspond &amp;agrave; la lettre substitu&amp;eacute;e.&lt;/p&gt;
&lt;h3 id="remplissage du dictionnaire"&gt;Remplissage du dictionnaire&lt;/h3&gt;
&lt;p&gt;Pour savoir quelle lettre est la plus fr&amp;eacute;quente dans le message, on cr&amp;eacute;e une petite fonction python :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;occurrences&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# On cr&amp;eacute;e le dictionnaire des occurences&lt;/span&gt;
    &lt;span class="nb"&gt;dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="c1"&gt;# Pour chaque lettre dans le message&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# S'il s'agit bien d'une lettre&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;","&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;":"&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="c1"&gt;# Si on a d&amp;eacute;j&amp;agrave; cr&amp;eacute;e une occurence&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="c1"&gt;# On retourne les lettres tri&amp;eacute;es par occurrences&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Par exemple pour le message crypt&amp;eacute; donn&amp;eacute; on obtient :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Y'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'R'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'U'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'G'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'X'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Q'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'P'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'E'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'I'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'S'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'H'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'C'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'N'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'D'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'J'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'M'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'F'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'K'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Z'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'L'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'T'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ainsi en essayant &lt;code&gt;Y=E&lt;/code&gt;, &lt;code&gt;R=A&lt;/code&gt;, &lt;code&gt;U=I&lt;/code&gt;, &lt;code&gt;G=S&lt;/code&gt;, &lt;code&gt;X=N&lt;/code&gt; sur le message crypt&amp;eacute; on obtient : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;_IA__&lt;/span&gt; &lt;span class="n"&gt;__EIS&lt;/span&gt; &lt;span class="n"&gt;E___E_E_IS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;____E&lt;/span&gt; &lt;span class="n"&gt;__E&lt;/span&gt; &lt;span class="n"&gt;_A&lt;/span&gt; &lt;span class="n"&gt;_A__NNE&lt;/span&gt; &lt;span class="n"&gt;A__&lt;/span&gt; &lt;span class="n"&gt;IE_SS_&lt;/span&gt; &lt;span class="n"&gt;ENNE&lt;/span&gt; &lt;span class="n"&gt;_E_E&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;_E_____IEI&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;_ESSA_E&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="n"&gt;ES_&lt;/span&gt; &lt;span class="n"&gt;___I____&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;___S&lt;/span&gt; &lt;span class="n"&gt;_EN____E&lt;/span&gt; &lt;span class="n"&gt;_EIS___ENNE_E__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;S__S&lt;/span&gt; &lt;span class="n"&gt;E__E_E&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;_E__&lt;/span&gt; &lt;span class="n"&gt;_E___NEI&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;_A&lt;/span&gt; &lt;span class="n"&gt;_A__NNE&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="n"&gt;A__A_IE&lt;/span&gt; &lt;span class="n"&gt;S_I&lt;/span&gt; &lt;span class="n"&gt;NA__ENNE&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;S__S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;_A_S&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;S__S&lt;/span&gt; &lt;span class="n"&gt;A____I_&lt;/span&gt; &lt;span class="n"&gt;___&lt;/span&gt; &lt;span class="n"&gt;___A_A_NE&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;N__EIEI&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="n"&gt;E__I___&lt;/span&gt; &lt;span class="n"&gt;__&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;S__S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;___I&lt;/span&gt; &lt;span class="n"&gt;____A___IE&lt;/span&gt; &lt;span class="n"&gt;_A&lt;/span&gt; &lt;span class="n"&gt;_A__NNE&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="n"&gt;A__EI&lt;/span&gt; &lt;span class="n"&gt;E_&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;___A__EI&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="n"&gt;E___E_E&lt;/span&gt; &lt;span class="n"&gt;___I&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;IE_I___EI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="n"&gt;A_&lt;/span&gt; &lt;span class="n"&gt;__SS___NEI&lt;/span&gt; &lt;span class="n"&gt;__A_IE&lt;/span&gt; &lt;span class="n"&gt;_IA__E__S&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;_NE&lt;/span&gt; &lt;span class="n"&gt;_EI_E__A__&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;IE___S____EI&lt;/span&gt; &lt;span class="n"&gt;NA&lt;/span&gt; &lt;span class="n"&gt;_NE&lt;/span&gt; &lt;span class="n"&gt;___ANE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;_ES&lt;/span&gt; &lt;span class="n"&gt;_IA__E__S&lt;/span&gt; &lt;span class="n"&gt;S___&lt;/span&gt; &lt;span class="n"&gt;____E__S&lt;/span&gt; &lt;span class="n"&gt;_AI&lt;/span&gt; &lt;span class="n"&gt;NES&lt;/span&gt; &lt;span class="n"&gt;E____ES&lt;/span&gt; &lt;span class="n"&gt;_IESE__ES&lt;/span&gt; &lt;span class="n"&gt;_A_S&lt;/span&gt; &lt;span class="n"&gt;NA&lt;/span&gt; &lt;span class="n"&gt;_NE&lt;/span&gt; &lt;span class="n"&gt;_S_&lt;/span&gt; &lt;span class="n"&gt;__E&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;___S&lt;/span&gt; &lt;span class="n"&gt;A_&lt;/span&gt; &lt;span class="n"&gt;A_IESSEE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;___I&lt;/span&gt; &lt;span class="n"&gt;___S&lt;/span&gt; &lt;span class="n"&gt;A__E_&lt;/span&gt; &lt;span class="n"&gt;_A_S&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="n"&gt;E___E_E&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="n"&gt;A_&lt;/span&gt; &lt;span class="n"&gt;E_ANE_E__&lt;/span&gt; &lt;span class="n"&gt;__SS___NEI&lt;/span&gt; &lt;span class="n"&gt;NE&lt;/span&gt; &lt;span class="n"&gt;N_E_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="n"&gt;__E____E&lt;/span&gt; &lt;span class="n"&gt;E_&lt;/span&gt; &lt;span class="n"&gt;NE&lt;/span&gt; &lt;span class="n"&gt;___EI_&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;_ENE____E&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;NA&lt;/span&gt; &lt;span class="n"&gt;_EIS___E&lt;/span&gt; &lt;span class="n"&gt;A_E_&lt;/span&gt; &lt;span class="n"&gt;___&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="n"&gt;A_A_S&lt;/span&gt; &lt;span class="n"&gt;IE__E_&lt;/span&gt; &lt;span class="n"&gt;___S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;NA&lt;/span&gt; &lt;span class="n"&gt;_NE&lt;/span&gt; &lt;span class="n"&gt;_S_&lt;/span&gt; &lt;span class="n"&gt;ES_&lt;/span&gt; &lt;span class="n"&gt;_EII___NNEE&lt;/span&gt; &lt;span class="n"&gt;_____&lt;/span&gt; &lt;span class="n"&gt;NE&lt;/span&gt; &lt;span class="n"&gt;_NA_&lt;/span&gt; &lt;span class="n"&gt;_EI_E__A__&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="n"&gt;___I_I&lt;/span&gt; &lt;span class="n"&gt;__E___A__A___IA___&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;___E&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_E__&lt;/span&gt; &lt;span class="n"&gt;ES_&lt;/span&gt; &lt;span class="n"&gt;NA&lt;/span&gt; &lt;span class="n"&gt;IE___SE&lt;/span&gt; &lt;span class="n"&gt;__E&lt;/span&gt; &lt;span class="n"&gt;___S&lt;/span&gt; &lt;span class="n"&gt;_E_E_&lt;/span&gt; &lt;span class="n"&gt;____EI&lt;/span&gt; &lt;span class="n"&gt;A_&lt;/span&gt; &lt;span class="n"&gt;___E&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;_NA_&lt;/span&gt; &lt;span class="n"&gt;_EI_E_&lt;/span&gt; &lt;span class="n"&gt;E_ANE_E__&lt;/span&gt; &lt;span class="n"&gt;_E&lt;/span&gt; &lt;span class="n"&gt;_E_EI___NNEI&lt;/span&gt; &lt;span class="n"&gt;NE&lt;/span&gt; &lt;span class="n"&gt;_____EI&lt;/span&gt; &lt;span class="n"&gt;___&lt;/span&gt; &lt;span class="n"&gt;_S_____E__S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;C'est effectivement un bon premier d&amp;eacute;part. Certes, cela ne marche pas pour toutes les lettres cependant on peut commencer &amp;agrave; deviner les mots. De plus s'agissant d'une lettre on devine que le mot du dernier paragraphe &lt;code&gt;ESIY&lt;/code&gt; : correspond &amp;agrave; &lt;code&gt;NOTE&lt;/code&gt; : en essayant petit &amp;agrave; petit on arrive &amp;agrave; remplir le dictionnaire :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;trouve&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"R"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"A"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"U"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"R"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"X"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"L"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"E"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"N"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"O"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"I"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"T"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"M"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"P"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"H"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"P"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"U"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"J"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Q"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"I"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"N"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"F"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Q"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"A"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"V"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"T"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"L"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"H"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"K"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"B"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"M"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"J"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"X"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ce qui nous donne enfin le message d&amp;eacute;crypt&amp;eacute; : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;BRAVO&lt;/span&gt; &lt;span class="n"&gt;CHERS&lt;/span&gt; &lt;span class="n"&gt;ENQUETEURS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JE&lt;/span&gt; &lt;span class="n"&gt;DOUTE&lt;/span&gt; &lt;span class="n"&gt;QUE&lt;/span&gt; &lt;span class="n"&gt;MA&lt;/span&gt; &lt;span class="n"&gt;FAMILLE&lt;/span&gt; &lt;span class="n"&gt;AIT&lt;/span&gt; &lt;span class="n"&gt;REUSSI&lt;/span&gt; &lt;span class="n"&gt;ELLE&lt;/span&gt; &lt;span class="n"&gt;MEME&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;DECHIFFRER&lt;/span&gt; &lt;span class="n"&gt;CE&lt;/span&gt; &lt;span class="n"&gt;MESSAGE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;C&lt;/span&gt; &lt;span class="n"&gt;EST&lt;/span&gt; &lt;span class="n"&gt;POURQUOI&lt;/span&gt; &lt;span class="n"&gt;JE&lt;/span&gt; &lt;span class="n"&gt;VOUS&lt;/span&gt; &lt;span class="n"&gt;FELICITE&lt;/span&gt; &lt;span class="n"&gt;PERSONNELLEMENT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;JE&lt;/span&gt; &lt;span class="n"&gt;SUIS&lt;/span&gt; &lt;span class="n"&gt;EMBETE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JE&lt;/span&gt; &lt;span class="n"&gt;NE&lt;/span&gt; &lt;span class="n"&gt;PEUX&lt;/span&gt; &lt;span class="n"&gt;DEVOILER&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;MA&lt;/span&gt; &lt;span class="n"&gt;FAMILLE&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="n"&gt;AFFAIRE&lt;/span&gt; &lt;span class="n"&gt;SUR&lt;/span&gt; &lt;span class="n"&gt;LAQUELLE&lt;/span&gt; &lt;span class="n"&gt;JE&lt;/span&gt; &lt;span class="n"&gt;SUIS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;MAIS&lt;/span&gt; &lt;span class="n"&gt;JE&lt;/span&gt; &lt;span class="n"&gt;SUIS&lt;/span&gt; &lt;span class="n"&gt;AUJOURD&lt;/span&gt; &lt;span class="n"&gt;HUI&lt;/span&gt; &lt;span class="n"&gt;INCAPABLE&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;ME&lt;/span&gt; &lt;span class="n"&gt;LIBERER&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="n"&gt;ENDROIT&lt;/span&gt; &lt;span class="n"&gt;OU&lt;/span&gt; &lt;span class="n"&gt;JE&lt;/span&gt; &lt;span class="n"&gt;SUIS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;POUR&lt;/span&gt; &lt;span class="n"&gt;CONVAINCRE&lt;/span&gt; &lt;span class="n"&gt;MA&lt;/span&gt; &lt;span class="n"&gt;FAMILLE&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;AIDER&lt;/span&gt; &lt;span class="n"&gt;ET&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;FINANCER&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="n"&gt;ENQUETE&lt;/span&gt; &lt;span class="n"&gt;POUR&lt;/span&gt; &lt;span class="n"&gt;ME&lt;/span&gt; &lt;span class="n"&gt;RETROUVER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;J&lt;/span&gt; &lt;span class="n"&gt;AI&lt;/span&gt; &lt;span class="n"&gt;DISSIMULER&lt;/span&gt; &lt;span class="n"&gt;QUATRE&lt;/span&gt; &lt;span class="n"&gt;FRAGMENTS&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;CLE&lt;/span&gt; &lt;span class="n"&gt;PERMETTANT&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;RECONSTITUER&lt;/span&gt; &lt;span class="n"&gt;LA&lt;/span&gt; &lt;span class="n"&gt;CLE&lt;/span&gt; &lt;span class="n"&gt;FINALE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;CES&lt;/span&gt; &lt;span class="n"&gt;FRAGMENTS&lt;/span&gt; &lt;span class="n"&gt;SONT&lt;/span&gt; &lt;span class="n"&gt;CONTENUS&lt;/span&gt; &lt;span class="n"&gt;PAR&lt;/span&gt; &lt;span class="n"&gt;LES&lt;/span&gt; &lt;span class="n"&gt;ENIGMES&lt;/span&gt; &lt;span class="n"&gt;PRESENTES&lt;/span&gt; &lt;span class="n"&gt;DANS&lt;/span&gt; &lt;span class="n"&gt;LA&lt;/span&gt; &lt;span class="n"&gt;CLE&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;QUE&lt;/span&gt; &lt;span class="n"&gt;JE&lt;/span&gt; &lt;span class="n"&gt;VOUS&lt;/span&gt; &lt;span class="n"&gt;AI&lt;/span&gt; &lt;span class="n"&gt;ADRESSEE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;POUR&lt;/span&gt; &lt;span class="n"&gt;VOUS&lt;/span&gt; &lt;span class="n"&gt;AIDEZ&lt;/span&gt; &lt;span class="n"&gt;DANS&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="n"&gt;ENQUETE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;J&lt;/span&gt; &lt;span class="n"&gt;AI&lt;/span&gt; &lt;span class="n"&gt;EGALEMENT&lt;/span&gt; &lt;span class="n"&gt;DISSIMULER&lt;/span&gt; &lt;span class="n"&gt;LE&lt;/span&gt; &lt;span class="n"&gt;LIEU&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="n"&gt;IDENTITE&lt;/span&gt; &lt;span class="n"&gt;ET&lt;/span&gt; &lt;span class="n"&gt;LE&lt;/span&gt; &lt;span class="n"&gt;NUMERO&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;TELEPHONE&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;LA&lt;/span&gt; &lt;span class="n"&gt;PERSONNE&lt;/span&gt; &lt;span class="n"&gt;AVEC&lt;/span&gt; &lt;span class="n"&gt;QUI&lt;/span&gt; &lt;span class="n"&gt;J&lt;/span&gt; &lt;span class="n"&gt;AVAIS&lt;/span&gt; &lt;span class="n"&gt;RENDEZ&lt;/span&gt; &lt;span class="n"&gt;VOUS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;LA&lt;/span&gt; &lt;span class="n"&gt;CLE&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;EST&lt;/span&gt; &lt;span class="n"&gt;VERROUILLEE&lt;/span&gt; &lt;span class="n"&gt;VOICI&lt;/span&gt; &lt;span class="n"&gt;LE&lt;/span&gt; &lt;span class="n"&gt;FLAG&lt;/span&gt; &lt;span class="n"&gt;PERMETTANT&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="n"&gt;OUVRIR&lt;/span&gt; &lt;span class="n"&gt;OPENTHATPANDORABOX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;NOTE&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CECI&lt;/span&gt; &lt;span class="n"&gt;EST&lt;/span&gt; &lt;span class="n"&gt;LA&lt;/span&gt; &lt;span class="n"&gt;REPONSE&lt;/span&gt; &lt;span class="n"&gt;QUE&lt;/span&gt; &lt;span class="n"&gt;VOUS&lt;/span&gt; &lt;span class="n"&gt;DEVEZ&lt;/span&gt; &lt;span class="n"&gt;DONNER&lt;/span&gt; &lt;span class="n"&gt;AU&lt;/span&gt; &lt;span class="n"&gt;JUGE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CE&lt;/span&gt; &lt;span class="n"&gt;FLAG&lt;/span&gt; &lt;span class="n"&gt;PERMET&lt;/span&gt; &lt;span class="n"&gt;EGALEMENT&lt;/span&gt; &lt;span class="n"&gt;DE&lt;/span&gt; &lt;span class="n"&gt;DEVEROUILLER&lt;/span&gt; &lt;span class="n"&gt;LE&lt;/span&gt; &lt;span class="n"&gt;FICHIER&lt;/span&gt; &lt;span class="n"&gt;ZIP&lt;/span&gt; &lt;span class="n"&gt;USBCONTENTS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On r&amp;eacute;cup&amp;egrave;re finalement le flag qui est &lt;code&gt;OPENTHATPANDORABOX&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="conclusion_1"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Ce challenge permettait de d&amp;eacute;bloquer les 7 derniers de la comp&amp;eacute;tition. Leur r&amp;eacute;solution &amp;eacute;tait primoridiale. Le dossier &lt;em&gt;usb_contents&lt;/em&gt; pr&amp;eacute;sent sur la cl&amp;eacute; se d&amp;eacute;v&amp;eacute;rouille ainsi avec le flag obtenu.
Les organisateurs ont finalement distribu&amp;eacute; le flag aux autres &amp;eacute;quipes en donnant un indice qui me fait penser encore que les combinaisons les plus simples sont malheureusement encore (trop) souvent utilis&amp;eacute;es dans les concours. Si vous remplacez "ABCDEFG..." par "AZERTYU..." vous obtenez le d&amp;eacute;chiffrage.
Mon erreur aura &amp;eacute;t&amp;eacute; ici d'avoir perdu trop de temps en pensant qu'il n'y avait pas de pattern possible pour la substitution. Je m'en souviendrais !&lt;/p&gt;
&lt;p&gt;PS : pour les flemmards voici une fonction python qui vous sort la prochaine lettre la plus fr&amp;eacute;quente en fonction du message et de ce que vous avez d&amp;eacute;j&amp;agrave; devin&amp;eacute; : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;prochaine_lettre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trouve&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# On recupere les occurences&lt;/span&gt;
    &lt;span class="n"&gt;occ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;occurrences&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Pour chaque lettre &amp;agrave; partir de la plus r&amp;eacute;currente&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;lettre&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;occ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Si la lettre n'a pas &amp;eacute;t&amp;eacute; trouv&amp;eacute;e&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;lettre&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;trouve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# On retourne la lettre&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;lettre&lt;/span&gt;
    &lt;span class="c1"&gt;# Toutes les lettres ont &amp;eacute;t&amp;eacute; test&amp;eacute;es&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PPS: pour les plus flemmard vous pouvez retrouver le code au complet &lt;a href="https://nightlyside.github.io/new/blog/files/BTC/pandora_box.py"&gt;ici&lt;/a&gt;.&lt;/p&gt;</content><category term="writeups"></category><category term="break-the-code"></category><category term="challenge"></category><category term="CTF"></category></entry><entry><title>[BTC] L'Histoire sans fin - WriteUp</title><link href="https://nightlyside.github.io/new/blog/writeups/btc-lhistoire-sans-fin-writeup/" rel="alternate"></link><published>2020-01-01T00:00:00+01:00</published><updated>2020-01-01T00:00:00+01:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2020-01-01:/new/blog/writeups/btc-lhistoire-sans-fin-writeup/</id><summary type="html">&lt;p&gt;&lt;em&gt;Il semblerait qu'un fragment de cl&amp;eacute; soit cach&amp;eacute; dans cet exercice.&lt;/em&gt; Je me permets de vous partager un classique revisit&amp;eacute; r&amp;eacute;cemment par l'une de mes s&amp;eacute;ries favorites. - This is Suzie, I copy. - Suzie! - Dusty-bun!?&lt;/p&gt;
&lt;p&gt;Look at what you see.
But not only !
What is the secret of the never ending …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Il semblerait qu'un fragment de cl&amp;eacute; soit cach&amp;eacute; dans cet exercice.&lt;/em&gt; Je me permets de vous partager un classique revisit&amp;eacute; r&amp;eacute;cemment par l'une de mes s&amp;eacute;ries favorites. - This is Suzie, I copy. - Suzie! - Dusty-bun!?&lt;/p&gt;
&lt;p&gt;Look at what you see.
But not only !
What is the secret of the never ending story ?
M. X. (-..-)&lt;/p&gt;
&lt;p&gt;Faut pas chercher midi &amp;agrave; quatorze heures mais plut&amp;ocirc;t Samuel &amp;agrave; midi ! P.S : Samuel est un morse, choisi lui la bonne piste !&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Le Challenge Break the Code est une comp&amp;eacute;tition du type Capture The Flag (CTF) organis&amp;eacute;e par &lt;a href="https://www.soprasteria.com/fr"&gt;Sopra Steria&lt;/a&gt; qui dure 1h30. Les &amp;eacute;quipes des grandes &amp;eacute;coles du bassin brestois s&amp;rsquo;y affrontent sur des challenges informatiques. Ces challenges m&amp;eacute;langent diff&amp;eacute;rentes comp&amp;eacute;tences telles que la programmation, l&amp;rsquo;analyse de donn&amp;eacute;e et la culture du num&amp;eacute;rique. &lt;/p&gt;
&lt;h2 id="analyse du premier fichier"&gt;Analyse du premier fichier&lt;/h2&gt;
&lt;p&gt;L'histoire sans fin est la 3&amp;egrave;me &amp;eacute;preuve de ce CTF, le but &amp;eacute;tant de trouver le drapeau qui est cach&amp;eacute; dans les fichiers de l'&amp;eacute;preuve.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Si vous voulez essayer par vous-m&amp;ecirc;me, les fichiers de cet exercice sont &lt;a href="https://nightlyside.github.io/new/blog/files/BTC/histoire-sans-fin.zip"&gt;disponibles ici&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On arrive sur une premi&amp;egrave;re difficult&amp;eacute;. Les deux fichiers fournis ne pr&amp;eacute;sentant pas d'extension, c'est &amp;agrave; nous d'en retrouver le type. Pour cela plusieurs m&amp;eacute;thodes.&lt;/p&gt;
&lt;p&gt;La premi&amp;egrave;re est la lecture du code source. Pour le fichier &lt;code&gt;ItCanHelp&lt;/code&gt;, une simple ouverture avec un bloc notes nous donne un indice :&lt;/p&gt;
&lt;p&gt;&lt;img alt="Code source ItCanHelp" class="center img-zoomable" src="https://nightlyside.github.io/new/blog/images/BTC/source_code.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;La deuxi&amp;egrave;me m&amp;eacute;thode est l'utilisation sous linux de la commande file : &lt;/p&gt;
&lt;p&gt;&lt;img alt="Command file ItCanHelp" class="center img-zoomable" src="https://nightlyside.github.io/new/blog/images/BTC/jpg_file_cmd.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;Une troisi&amp;egrave;me m&amp;eacute;thode est l'utilisation de sites web d&amp;eacute;tecteurs de types de fichiers tel que &lt;a href="http://www.checkfiletype.com/"&gt;ChekFileType.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On reconnait que le fichier inconnu est une image au format JPEG. Il suffit alors j'ajouter &lt;code&gt;.jpg&lt;/code&gt; au nom du fichier pour en d&amp;eacute;couvrir le contenu : &lt;/p&gt;
&lt;p&gt;&lt;img alt="Contenu de ItCanHelp" class="center img-zoomable" height="200px" src="https://nightlyside.github.io/new/blog/images/BTC/ItCanHelp.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;On obtient le premier indice qui nous permettra de r&amp;eacute;soudre le challenge, on aura affaire &amp;agrave; du &lt;strong&gt;morse&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id="analyse du second fichier"&gt;Analyse du second fichier&lt;/h2&gt;
&lt;p&gt;Avec le second fichier, certaines m&amp;eacute;thodes pr&amp;eacute;sent&amp;eacute;es pr&amp;eacute;c&amp;eacute;demment ne pourront pas fonctionner. En effet, en essayant d'ouvrir le fichier avec un bloc note, le contenu reste illisible &amp;agrave; l'oeil nu. Pour trouver le type de fichier, la seconde comme la troisi&amp;egrave;me m&amp;eacute;thode montrent qu'il s'agit d'un fichier &lt;a href="https://fr.wikipedia.org/wiki/Musical_Instrument_Digital_Interface"&gt;MIDI&lt;/a&gt;, audio donc.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Commande file NeverEndingStory" class="center img-zoomable" src="https://nightlyside.github.io/new/blog/images/BTC/midi_file_cmd.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;Mon premier r&amp;eacute;fl&amp;egrave;xe est alors de rajouter l'extension &lt;code&gt;.midi&lt;/code&gt; au fichier et de l'&amp;eacute;couter pour voir si je ne peux pas r&amp;eacute;cup&amp;eacute;rer d'autres indices. (petit moment g&amp;ecirc;nant du au fait que tout le monde &amp;eacute;tait concentr&amp;eacute; dans son &amp;eacute;preuve et que je joue un morceau de musique &amp;agrave; fond sur les hauts parleurs de mon pc portable).&lt;/p&gt;
&lt;p&gt;Malheureusement l'&amp;eacute;coute de ce fichier ne me donne absolument aucun indice. Je repense alors au format du fichier. Le MIDI est un format qui permet de traduire assez facilement une partition en musique, je me suis alors souvenu que l'on pouvait &amp;eacute;diter les fichiers MIDI ! L'&amp;eacute;tape suivante &amp;agrave; donc &amp;eacute;t&amp;eacute; de t&amp;eacute;l&amp;eacute;charger un &amp;eacute;diteur, j'ai opt&amp;eacute; pour &lt;a href="https://www.midieditor.org/"&gt;MIDIeditor&lt;/a&gt; qui fonctionne &amp;agrave; la fois sous windows et linux. L'ouverture du fichier &lt;code&gt;NeverEndingStory&lt;/code&gt; me donne ceci : &lt;/p&gt;
&lt;p&gt;&lt;img alt="MIDI Editor" class="center img-zoomable" src="https://nightlyside.github.io/new/blog/images/BTC/midieditor.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;On remarque deux choses fabuleuses :
1. Il existe une piste (en violet) qui a une tonalit&amp;eacute; constante
2. Il existe un canal correspondant qui porte un nom bien choisi : "Do you know Planck's constant ? I know it starts with two sixes, and then a ..."&lt;/p&gt;
&lt;p&gt;On supprime les autres canaux, puis en zoomant sur celui qui reste on observe que le signal correspond &amp;agrave; un code morse. Bingo !&lt;/p&gt;
&lt;p&gt;&lt;img alt="Canal morse du fichier" class="center img-zoomable" src="https://nightlyside.github.io/new/blog/images/BTC/midi_solo.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;Ci-dessous vous retrouverez la retranscription en morse (- &amp;eacute;tant un long, . &amp;eacute;tant un court)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;-....&lt;/span&gt; &lt;span class="o"&gt;.-.-.-&lt;/span&gt; &lt;span class="o"&gt;-....&lt;/span&gt; &lt;span class="o"&gt;..---&lt;/span&gt; &lt;span class="o"&gt;-....&lt;/span&gt; &lt;span class="o"&gt;-----&lt;/span&gt; &lt;span class="o"&gt;--...&lt;/span&gt; &lt;span class="o"&gt;-----&lt;/span&gt; &lt;span class="o"&gt;-----&lt;/span&gt; &lt;span class="o"&gt;....-&lt;/span&gt; &lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="o"&gt;....&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;....&lt;/span&gt; &lt;span class="o"&gt;.-&lt;/span&gt; &lt;span class="o"&gt;-.&lt;/span&gt; &lt;span class="o"&gt;-.-&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="o"&gt;..-&lt;/span&gt; &lt;span class="o"&gt;--..&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;..-.&lt;/span&gt; &lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="o"&gt;.-.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;....&lt;/span&gt; &lt;span class="o"&gt;.-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;....&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;-.-&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;-.--&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Il suffit alors de d&amp;eacute;cripter le message avec un site comme &lt;a href="https://www.dcode.fr/code-morse"&gt;dcode.fr&lt;/a&gt; qui nous retourne le flag (drapeau) suivant : &lt;code&gt;6.62607004OHTHANKSSUZIEFORTHATISTHEKEY&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Ce challenge en temps r&amp;eacute;el m'a prit pr&amp;egrave;s de 40 minutes &amp;agrave; r&amp;eacute;soudre. Je n'avais pas les outils ad&amp;eacute;quats et le stress s'ajoutant, j'ai commis des erreurs qui auraient pu me faire gagner en vitesse.&lt;/p&gt;
&lt;p&gt;Cependant ce challenge repr&amp;eacute;sentait &amp;agrave; lui tout seul 55 points sur le challenge, en ajoutant les 10 points de bonus en &amp;eacute;tant la premi&amp;egrave;re &amp;eacute;quipe a avoir trouv&amp;eacute; ce challenge (et finalement la seule sur les deux repr&amp;eacute;sentations de l'&amp;eacute;preuve &amp;agrave; Rennes et Brest), cela a fait pr&amp;egrave;s de 65 points d'un coup.&lt;/p&gt;
&lt;p&gt;Je me suis &amp;eacute;clat&amp;eacute; pendant la r&amp;eacute;solution de ce challenge dont les indices &amp;eacute;taient nombreux et j'esp&amp;egrave;re qu'au travers de ces quelques lignes vous avez pu exp&amp;eacute;rimenter ce m&amp;ecirc;me enthousiasthme !&lt;/p&gt;</content><category term="writeups"></category><category term="break-the-code"></category><category term="challenge"></category><category term="CTF"></category></entry><entry><title>[BTC] Nombre heureux - WriteUp</title><link href="https://nightlyside.github.io/new/blog/writeups/btc-nombre-heureux-writeup/" rel="alternate"></link><published>2020-01-01T00:00:00+01:00</published><updated>2020-01-01T00:00:00+01:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2020-01-01:/new/blog/writeups/btc-nombre-heureux-writeup/</id><summary type="html">
&lt;p&gt;En fouillant dans la clé USB, vous tombez sur un dossier contenant un morceau d'annuaire téléphonique, et un fichier contenant des instructions.&lt;/p&gt;
&lt;p&gt;"Depuis quelques mois, un de mes collègues me harcèle et j'ai peur qu'il finisse par me faire du mal. Des fois qu'il tomberait sur ce document, je préfère ne pas le citer directement ..." &lt;/p&gt;</summary><content type="html">
&lt;p&gt;En fouillant dans la cl&amp;eacute; USB, vous tombez sur un dossier contenant un morceau d'annuaire t&amp;eacute;l&amp;eacute;phonique, et un fichier contenant des instructions.&lt;/p&gt;
&lt;p&gt;"Depuis quelques mois, un de mes coll&amp;egrave;gues me harc&amp;egrave;le et j'ai peur qu'il finisse par me faire du mal. Des fois qu'il tomberait sur ce document, je pr&amp;eacute;f&amp;egrave;re ne pas le citer directement ..." &lt;/p&gt;
&lt;p&gt;Aidez la police en trouvant l'identit&amp;eacute; de la personne dont M. X parle.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Le Challenge Break the Code est une comp&amp;eacute;tition du type Capture The Flag (CTF) organis&amp;eacute;e par &lt;a href="https://www.soprasteria.com/fr"&gt;Sopra Steria&lt;/a&gt; qui dure 1h30. Les &amp;eacute;quipes des grandes &amp;eacute;coles du bassin brestois s&amp;rsquo;y affrontent sur des challenges informatiques. Ces challenges m&amp;eacute;langent diff&amp;eacute;rentes comp&amp;eacute;tences telles que la programmation, l&amp;rsquo;analyse de donn&amp;eacute;e et la culture du num&amp;eacute;rique. &lt;/p&gt;
&lt;h2 id="premiere analyse"&gt;Premi&amp;egrave;re Analyse&lt;/h2&gt;
&lt;p&gt;Nombre heureux est la 7&amp;egrave;me &amp;eacute;preuve de ce CTF, le but &amp;eacute;tant de trouver un num&amp;eacute;ro de t&amp;eacute;l&amp;eacute;phone pr&amp;eacute;sent dans l'annuaire de l'exercice.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Si vous voulez essayer par vous-m&amp;ecirc;me, les fichiers de cet exercice sont disponibles &lt;a href="https://nightlyside.github.io/new/blog/files/BTC/nombre-heureux.zip"&gt;ici&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pour retrouver ce num&amp;eacute;ro l'exercice nous donne des instructions, il s'agit de la somme des nombres qui remplissent les conditions suivantes :  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ecirc;tre compris entre 0 et 200 000 &lt;strong&gt;inclus&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&amp;ecirc;tre heureux&lt;/li&gt;
&lt;li&gt;&amp;ecirc;tre impair&lt;/li&gt;
&lt;li&gt;&amp;ecirc;tre premier&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comme Break The Code est une comp&amp;eacute;tition de rapidit&amp;eacute;, pour le prototypage de l'algorithme j'ai d&amp;eacute;cid&amp;eacute; de choisir python.&lt;/p&gt;
&lt;h2 id="conception de l'algorithme"&gt;Conception de l'algorithme&lt;/h2&gt;
&lt;h3 id="nombre heureux"&gt;Nombre heureux&lt;/h3&gt;
&lt;p&gt;L'exercice nous d&amp;eacute;finit un nombre heureux de la sorte :
Partant de n'importe quel entier positif, remplacer cet entier par la somme des carr&amp;eacute;s des chiffres qui le composent, et r&amp;eacute;p&amp;eacute;ter le processus jusqu'&amp;agrave; ce que le nombre soit &amp;eacute;gal &amp;agrave; 1 (auquel cas le nombre est qualifi&amp;eacute; de "heureux"). Si le processus boucle (i.e. on repasse sur un nombre d&amp;eacute;ja obtenu lors d'une &amp;eacute;tape pr&amp;eacute;c&amp;eacute;dente), alors le chiffre n'est pas "heureux" et le processus peut &amp;ecirc;tre stopp&amp;eacute;.&lt;/p&gt;
&lt;p&gt;Un algorithme na&amp;iuml;f est une fonction r&amp;eacute;cursive permettant de d&amp;eacute;terminer si le nombre est heureux ou non : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;heureux&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Si on entre dans une boucle&lt;/span&gt;
    &lt;span class="c1"&gt;# Le nombre n'est pas heureux&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;145&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
    &lt;span class="n"&gt;s_k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="c1"&gt;# Calcul de la somme des carr&amp;eacute;s des chiffres de k&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s_k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="c1"&gt;# On r&amp;eacute;it&amp;egrave;re&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;heureux&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;La m&amp;eacute;thode que je recommande dans ce genre de cas (pour des calculs "classiques") est de chercher un algorithme pr&amp;eacute;fait sur internet.
Par exemple &lt;a href="http://www.developpement-informatique.com/article/98/exercices-corriges-python-serie-9"&gt;celui-ci&lt;/a&gt; fera tr&amp;egrave;s bien l'affaire et pourra vous faire gagner 10-15 minutes sur l'exercice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="nombre impair et premier"&gt;Nombre impair et premier&lt;/h3&gt;
&lt;p&gt;En python la syntaxe pour v&amp;eacute;rifier si un nombre est impair est tr&amp;egrave;s simple : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;impair&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour savoir si il est premier, le plus rapide sera de chercher un algorithme pr&amp;eacute;fait sur internet. Dans le contexte de cet exercice j'ai utilis&amp;eacute; &lt;a href="https://stackoverflow.com/a/27946768"&gt;celui-ci&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;islice&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;premier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;islice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ecriture de la boucle"&gt;Ecriture de la boucle&lt;/h3&gt;
&lt;p&gt;Il ne reste plus qu'&amp;agrave; it&amp;eacute;rer sur chaque nombre et de calculer la somme : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;somme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="c1"&gt;# Pour tous les nombres de 1 &amp;agrave; 200 000 inclus&lt;/span&gt;
    &lt;span class="c1"&gt;# 0 n'&amp;eacute;tant pas impair&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200001&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;heureux&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;impair&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;premier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;somme&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Le num&amp;eacute;ro de t&amp;eacute;l&amp;eacute;phone est : &lt;/span&gt;&lt;span class="si"&gt;{somme}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On r&amp;eacute;cup&amp;egrave;re finalement en sortie de notre algorithme : &lt;em&gt;Le num&amp;eacute;ro de t&amp;eacute;l&amp;eacute;phone est : 254445710&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La toute derni&amp;egrave;re &amp;eacute;tape est de v&amp;eacute;rifier que le num&amp;eacute;ro est bien pr&amp;eacute;sent dans l'annuaire.
Il est effectivement pr&amp;eacute;sent et il s'agit de &lt;strong&gt;Michael Scarn&lt;/strong&gt; qui repr&amp;eacute;sente le flag (drapeau) de cet exercice.&lt;/p&gt;
&lt;h2 id="conclusion_1"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Ce challenge est relativement simple, il s'agit plus d'une &amp;eacute;preuve de programmation que d'une enqu&amp;ecirc;te digne d'un CTF.
Cependant il peut s'av&amp;eacute;rer &amp;ecirc;tre un v&amp;eacute;ritable challenge si on souhaite recoder "&amp;agrave; la main" chaque fonction utilis&amp;eacute;e dans cet exercice.
Internet &amp;agrave; &amp;eacute;t&amp;eacute; invent&amp;eacute; dans le but de partager les connaissances. Si les CTF tels que Break The Code autorisent son utilisation durant le challenge c'est bien pour que l'on s'en serve !&lt;/p&gt;
&lt;p&gt;PS: vous retrouverez le script python complet &lt;a href="https://nightlyside.github.io/new/blog/files/BTC/nombre-heureux.py"&gt;ici&lt;/a&gt;.&lt;/p&gt;</content><category term="writeups"></category><category term="break-the-code"></category><category term="challenge"></category><category term="CTF"></category></entry><entry><title>[TIPE] Un problème de route - Bonus</title><link href="https://nightlyside.github.io/new/blog/python/tipe-un-probleme-de-route-bonus/" rel="alternate"></link><published>2018-03-21T00:00:00+01:00</published><updated>2018-03-21T00:00:00+01:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2018-03-21:/new/blog/python/tipe-un-probleme-de-route-bonus/</id><summary type="html">
&lt;p&gt;Un petit bonus pour ce projet. Je cherche maintenant à représenter la vitesse de chaque véhicule afin d’avoir une idée plus précise sur la fluidité du trafic routier. Il y a certe peu de modifications à faire, mais cela en vaut le coup.
&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Un petit bonus pour ce projet. Je cherche maintenant &amp;agrave; repr&amp;eacute;senter la vitesse de chaque v&amp;eacute;hicule afin d&amp;rsquo;avoir une id&amp;eacute;e plus pr&amp;eacute;cise sur la fluidit&amp;eacute; du trafic routier. Il y a certe peu de modifications &amp;agrave; faire, mais cela en vaut le coup.
&lt;/p&gt;
&lt;h2 id="pourquoi une telle representation"&gt;Pourquoi une telle repr&amp;eacute;sentation&lt;/h2&gt;
&lt;p&gt;L&amp;rsquo;id&amp;eacute;e m&amp;rsquo;est venue en lisant des articles sur la repr&amp;eacute;sentation de Nagel-Schreckenberg. Apr&amp;egrave;s avoir fl&amp;acirc;n&amp;eacute; quelques temps sur wikip&amp;eacute;dia, j&amp;rsquo;ai d&amp;eacute;cid&amp;eacute; de changer la langue de la page afin de voir si d&amp;rsquo;autres contributeurs non francophones avaient &amp;eacute;toff&amp;eacute;s leur page plus que &amp;ccedil;a n&amp;rsquo;est le cas sur celle fran&amp;ccedil;aise.&lt;/p&gt;
&lt;p&gt;A ma grande surprise, la &lt;a href="https://de.wikipedia.org/wiki/Nagel-Schreckenberg-Modell"&gt;page allemande du model de Nagel Schreckenberg&lt;/a&gt; montre une repr&amp;eacute;sentation du model plut&amp;ocirc;t ing&amp;eacute;nieuse : donner une couleur par v&amp;eacute;hicule en fonction de la vitesse de circulation de celui-ci. (voir figure ci-dessous)&lt;/p&gt;
&lt;p&gt;&lt;img alt="Repr&amp;eacute;sentation" class="center img-zoomable" height="200px" src="https://nightlyside.github.io/new/blog/images/TIPE/NaSch.png"/&gt;&lt;/p&gt;
&lt;p&gt;Maintenant on va modifier le code source de notre &amp;eacute;tude afin d&amp;rsquo;y impl&amp;eacute;menter cette nouvelle fonctionalit&amp;eacute;.&lt;/p&gt;
&lt;h2 id="implementation"&gt;Impl&amp;eacute;mentation&lt;/h2&gt;
&lt;p&gt;La premi&amp;egrave;re &amp;eacute;tape est de modifier la fonction qui place les v&amp;eacute;hicules. En effet, pr&amp;eacute;cedemment, pour placer une voiture sur la carte, la simulation ajoutait un *2 sur la case correspondante.&lt;/p&gt;
&lt;p&gt;Maintenant nous allons remplacer la fonction placerVoiture de la classe Carte par le bout de code suivant : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;placerVoiture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;voiture&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;voiture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grille&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;voiture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getVitesse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La seule grande diff&amp;eacute;rence est que l&amp;rsquo;on calcule la valeur de la case par &lt;code&gt;2 + vitesse de la voiture&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Cela nous am&amp;egrave;ne &amp;agrave; notre seconde modification, en effet, pour d&amp;eacute;tecter la pr&amp;eacute;sence d&amp;rsquo;une voiture, on r&amp;eacute;cup&amp;eacute;rait la valeur d&amp;rsquo;une case de la carte que l&amp;rsquo;on comparait &amp;agrave; 2. On remplace alors toutes les occurence par $\geq 2$ ce qui permettera de d&amp;eacute;tecter la pr&amp;eacute;sence d&amp;rsquo;une voiture quelque soit sa vitesse.&lt;/p&gt;
&lt;h2 id="affichage"&gt;Affichage&lt;/h2&gt;
&lt;p&gt;On a maintenant l&amp;rsquo;ajout des vitesses des voitures sur la carte, il est grand temps de les afficher ! Pour cela on change l&amp;eacute;g&amp;egrave;rement la liste des couleurs de matplotlib.pyplot par :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'white'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'palegreen'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'antiquewhite'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'yellow'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'orange'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'orangered'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'firebrick'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'darkred'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'black'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ainsi une voiture &amp;agrave; l&amp;rsquo;arr&amp;ecirc;t sera de couleur jaune et tendra vers le rouge en acc&amp;eacute;l&amp;eacute;rant, puis sera noire &amp;agrave; vitesse maximale. Le seul probl&amp;egrave;me avec matplotlib est que si il n&amp;rsquo;y a pas au moins une occurence de chaque couleur, il n&amp;rsquo;affichera pas correctement la couleur de la route et des v&amp;eacute;hicules. On ajoute alors &amp;agrave; la repr&amp;eacute;sentation de la carte une unique ligne de pixels contenant toutes les valeurs de la vitesse afin quelles soient toutes repr&amp;eacute;sent&amp;eacute;es :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tableau&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tableau&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vmax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tableau&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vmax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;C&amp;rsquo;est tout ce qu&amp;rsquo;il y avait &amp;agrave; faire !! (oui j&amp;rsquo;ai pass&amp;eacute; pr&amp;egrave;s de 2 heures sur ces modifications) Le r&amp;eacute;sultat est vraiment satisfaisant par contre.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Vitesses" class="center img-zoomable" height="400px" src="https://nightlyside.github.io/new/blog/images/TIPE/sim_vitesse.png"/&gt;&lt;/p&gt;</content><category term="python"></category><category term="python"></category><category term="TIPE"></category><category term="route"></category></entry><entry><title>[TIPE] Un problème de route - Le final (4/4)</title><link href="https://nightlyside.github.io/new/blog/python/tipe-un-probleme-de-route-le-final-44/" rel="alternate"></link><published>2017-12-09T00:00:00+01:00</published><updated>2017-12-09T00:00:00+01:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2017-12-09:/new/blog/python/tipe-un-probleme-de-route-le-final-44/</id><summary type="html">&lt;p&gt;Derni&amp;egrave;re ligne droite pour le mod&amp;egrave;le informatique. La derni&amp;egrave;re &amp;eacute;tape consiste &amp;agrave; impl&amp;eacute;menter les carrefours, les d&amp;eacute;viations et les intersections. On se place toujours dans les hypoth&amp;egrave;ses mises en place dans l&amp;rsquo;explication de la d&amp;eacute;marche. Mais leur impl&amp;eacute;mentation n&amp;rsquo;est pas facile &amp;agrave; se repr&amp;eacute;senter. Durant la phase de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Derni&amp;egrave;re ligne droite pour le mod&amp;egrave;le informatique. La derni&amp;egrave;re &amp;eacute;tape consiste &amp;agrave; impl&amp;eacute;menter les carrefours, les d&amp;eacute;viations et les intersections. On se place toujours dans les hypoth&amp;egrave;ses mises en place dans l&amp;rsquo;explication de la d&amp;eacute;marche. Mais leur impl&amp;eacute;mentation n&amp;rsquo;est pas facile &amp;agrave; se repr&amp;eacute;senter. Durant la phase de d&amp;eacute;veloppement, on a fait face &amp;agrave; de nombreux probl&amp;egrave;mes, voici comment on les a r&amp;eacute;solu.&lt;/p&gt;
&lt;h2 id="reecriture des representations des voitures, chemins et de la grille"&gt;R&amp;eacute;&amp;eacute;criture des repr&amp;eacute;sentations des voitures, chemins et de la grille&lt;/h2&gt;
&lt;p&gt;L&amp;rsquo;ancienne repr&amp;eacute;sentation (&amp;agrave; l&amp;rsquo;aide de tableau) n&amp;rsquo;est probablement pas la meilleure solution &amp;agrave; consid&amp;eacute;rer pour la compr&amp;eacute;hension et la lisibilit&amp;eacute; de l&amp;rsquo;algorithme. Pour cela on utilisera les classes (notion hors programme de PSI en CPGE), pour plus d&amp;rsquo;information &lt;a href="https://openclassrooms.com/courses/apprenez-a-programmer-en-python/premiere-approche-des-classes"&gt;ce cours publi&amp;eacute; sur OpenClassroom&lt;/a&gt; explique mieux ce concept que je ne pourrais le faire.&lt;/p&gt;
&lt;h3 id="les voitures"&gt;Les voitures&lt;/h3&gt;
&lt;p&gt;Une des raisons pour lesquelles nous allons utiliser les classes est que cela facilite la compr&amp;eacute;hension. En effet pour r&amp;eacute;cup&amp;eacute;rer la vitesse d&amp;rsquo;une voiture avant il fallait r&amp;eacute;cup&amp;eacute;rer une entr&amp;eacute;e d&amp;rsquo;un tableau correspondant &amp;agrave; ladite voiture. En utilisant les classes on utilise maintenant la m&amp;eacute;thode &lt;code&gt;voiture.getPosition(t)&lt;/code&gt;. Ainsi, on cr&amp;eacute;e chaque voiture en lui donnant le nombre d&amp;rsquo;it&amp;eacute;rations que la simulation va calculer afin de stocker toutes les positions et vitesses pour les analyser. On lui donne le chemin sur lequel elle va &amp;eacute;voluer ainsi que sa position initiale et la vitesse maximale &amp;agrave; laquelle et pourra circuler. Le reste sera g&amp;eacute;r&amp;eacute; par la simulation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Voiture&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nbTemps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;chemin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vmax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;facteur&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# On d&amp;eacute;finit les attributs de la voiture&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getVitesse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;maj_vitesse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# On adapte ici le code de la simulation pr&amp;eacute;c&amp;eacute;dente&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="la carte et ses routes"&gt;La carte et ses routes&lt;/h3&gt;
&lt;p&gt;De m&amp;ecirc;me on retranscrit le code pr&amp;eacute;c&amp;eacute;dent en quelque chose de plus exploitable. En effet, il est plus simple d&amp;rsquo;&amp;eacute;crire &lt;code&gt;carte.placerVoiture(t, voiture)&lt;/code&gt; pour modifier la carte en ajoutant une voiture &amp;agrave; l&amp;rsquo;instant &lt;em&gt;t&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Carte&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hauteur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;largeur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nbTemps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aleatoire&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# On d&amp;eacute;finit les attributs de la carte&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;elementALaPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Retourne l'&amp;eacute;l&amp;eacute;ment de la carte se trouvant &amp;agrave; une certaine position&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;creerGrille&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hauteur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;largeur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nbTemps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aleatoire&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# Permet d'initialiser la grille pour la simulation&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;represente&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;taille&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Retourne une repr&amp;eacute;sentation de la carte &amp;agrave; l'instant t&lt;/span&gt;
        &lt;span class="c1"&gt;# Et ce, taille fois plus grand&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;placerVoiture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;voiture&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;placerRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;De m&amp;ecirc;me pour les routes :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Chemin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# On initialise la route &amp;agrave; partir des positions par lesquelles&lt;/span&gt;
        &lt;span class="c1"&gt;# elle passera&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;creerCheminSimple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos_i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos_f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Permet de cr&amp;eacute;er un chemin simple entre 2 points&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;creerCheminComplexe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Permet de cr&amp;eacute;er un chemin complexe passant par un ensemble de positions&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;additionneChemins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Permet d'additionner le chemin c &amp;agrave; l'actuel&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;estSurChemin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# V&amp;eacute;rifie si une position se trouve sur le chemin&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;voisins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;voisin_suivant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Retourner la distance en nombre de cases entre les deux positions&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="le probleme de l'ancienne simulation_1"&gt;Le probl&amp;egrave;me de l'ancienne simulation&lt;/h2&gt;
&lt;p&gt;L&amp;rsquo;ancienne simulation fonctionnait bien lorsqu&amp;rsquo;il n&amp;rsquo;y avait qu&amp;rsquo;une seule voiture sur la route. Cependant, la voiture, face &amp;agrave; une bifurcation va choisir al&amp;eacute;atoirement une route ou l&amp;rsquo;autre. Nous l&amp;rsquo;avions cod&amp;eacute; de cette mani&amp;egrave;re, mais nous voulons que la circulation ne se fasse que dans un sens pour pouvoir analyser la vitesse et la densit&amp;eacute; des voitures.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Probl&amp;egrave;me" class="center img-zoomable" height="200px" src="https://nightlyside.github.io/new/blog/images/TIPE/probleme.gif"/&gt;&lt;/p&gt;
&lt;p&gt;Pour r&amp;eacute;soudre ce probl&amp;egrave;me, une solution (celle que j&amp;rsquo;ai choisi), est de num&amp;eacute;roter chaque case de la route, ainsi le sens de circulation sera donn&amp;eacute; par des indices de case croissants. C&amp;rsquo;est &amp;agrave; dire que le chemin du post pr&amp;eacute;c&amp;eacute;dent devient maintenant :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chemin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; 
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; 
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; 
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; 
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="utilisation du nouveau code"&gt;Utilisation du nouveau code&lt;/h2&gt;
&lt;h3 id="quelques procedures et fonctions bien utiles"&gt;Quelques proc&amp;eacute;dures et fonctions bien utiles&lt;/h3&gt;
&lt;p&gt;Depuis le d&amp;eacute;but de ces posts, je vous ai pr&amp;eacute;sent&amp;eacute; des images, du texte, correspondant au r&amp;eacute;sultats des simulations mais je ne vous ai pas encore expliqu&amp;eacute; comment cela se fait. Voici quelques fonctions bien utiles que j&amp;rsquo;ai utilis&amp;eacute; entre autre afin d&amp;rsquo;exporte la carte &amp;agrave; un instant donn&amp;eacute;, comment j&amp;rsquo;ai transform&amp;eacute; une vitesse en cases par unit&amp;eacute; de temps en km/h, etc.&lt;/p&gt;
&lt;p&gt;La fonction suivante permet de r&amp;eacute;cup&amp;eacute;rer une distance cart&amp;eacute;sienne entre deux points (il s&amp;rsquo;agit de la norme de la distance &amp;agrave; ces points).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;distancePos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos_i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos_f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos_i&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos_f&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Voici une autre fonction tr&amp;egrave;s utile que je tra&amp;icirc;ne avec moi depuis quelques ann&amp;eacute;es et qui me sert pour num&amp;eacute;roter des images d&amp;rsquo;une simulation afin qu&amp;rsquo;elles soient accept&amp;eacute;e par certains logiciels. Elle permet entre autre de transformer &lt;code&gt;98&lt;/code&gt; et &lt;code&gt;6&lt;/code&gt; en &lt;code&gt;00098&lt;/code&gt; et &lt;code&gt;00006&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ajoutezeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nombrezeros&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Prends le nombre n et rajoute le nombre de z&amp;eacute;ros n&amp;eacute;cessaires&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;agrave; sa repr&amp;eacute;sentation en chaine de charact&amp;egrave;re&lt;/span&gt;
&lt;span class="sd"&gt;    Retourne une chaine de charact&amp;egrave;res&lt;/span&gt;
&lt;span class="sd"&gt;    ex : on veut un nombre &amp;agrave; 3 chiffres : ajoutezeros(3, 5) = "003"&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;nb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nombrezeros&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;nb&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"0"&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;nb&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Le code suivant permet d&amp;rsquo;afficher la carte &amp;agrave; l&amp;rsquo;instant t. J&amp;rsquo;ai d&amp;eacute;cid&amp;eacute; de laisser tomber matplotlib pour pylab qui &amp;agrave; l&amp;rsquo;avantage de supporter un raffraichissement de l&amp;rsquo;image plus fr&amp;eacute;quent (et par cons&amp;eacute;quent le support des animations).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;affiche_grille&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pylab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ion&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;tabplot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pylab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;represente&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;taille&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; \
                    &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListedColormap&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'white'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'palegreen'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'antiquewhite'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Voici une des plus grandes avanc&amp;eacute;es de mon code depuis la premi&amp;egrave;re version (en lin&amp;eacute;aire) il sert &amp;agrave; jouer l&amp;rsquo;animation sans pour autant l&amp;rsquo;exporter en fichiers. Cela reste plutot lent et le param&amp;egrave;tre qui permet de contr&amp;ocirc;le le nombre d&amp;rsquo;images par secondes (FPS en anglais) est hom&amp;eacute;opathique.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;affiche_simulation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fps&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nbTemps&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pylab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ion&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;tabplot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pylab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;represente&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;taille&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; \ 
        &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListedColormap&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'white'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'palegreen'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'antiquewhite'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmax&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;tabplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;represente&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;taille&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;pylab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;xx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pylab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitforbuttonpress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="creation de la simulation"&gt;Cr&amp;eacute;ation de la simulation&lt;/h3&gt;
&lt;p&gt;Le code pr&amp;eacute;c&amp;eacute;dent s&amp;rsquo;est bien raccourci gr&amp;acirc;ce aux classes et poss&amp;egrave;de une certaine compr&amp;eacute;hension quand &amp;agrave; son initialisation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# on cr&amp;eacute;e la carte&lt;/span&gt;
&lt;span class="n"&gt;carte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Carte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nbTemps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# on cr&amp;eacute;e la route&lt;/span&gt;
&lt;span class="n"&gt;route&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Chemin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# on cr&amp;eacute;e la seconde route&lt;/span&gt;
&lt;span class="n"&gt;route2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Chemin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# on indique l'endroit o&amp;ugrave; les routes vont se rejoindre&lt;/span&gt;
&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deviation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;route2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    
&lt;span class="c1"&gt;# On place la route&lt;/span&gt;
&lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;placerChemin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On a ainsi cr&amp;eacute;e la carte sur laquelle la simulation va se d&amp;eacute;rouler, cr&amp;eacute;e la route principale avec une d&amp;eacute;viation. Maintenant on doit cr&amp;eacute;e les voitures. Pour se faire rien de plus simple on utilise la classe du dessus pour cr&amp;eacute;e autant d&amp;rsquo;instances que de voitures. On utilise le code suivant, notez bien la structure particuli&amp;egrave;re qui est presque transparente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;voitures&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nbVoitures&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;voiture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Voiture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nbTemps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vitessemax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;voitures&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;voiture&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# On place la voiture&lt;/span&gt;
    &lt;span class="n"&gt;voiture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;placerVoiture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;voiture&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On vient de cr&amp;eacute;er toutes les voitures et on les a plac&amp;eacute;es &amp;agrave; leur premi&amp;egrave;re position c&amp;rsquo;est &amp;agrave; dire pour &amp;agrave; $t=0$. Il ne reste plus qu&amp;rsquo;&amp;agrave; calculer la vitesse de chaque voiture pour chaque temps et les d&amp;eacute;placer en cons&amp;eacute;quence. On commence &amp;agrave; $t=1$ puisque la situation initiale &amp;agrave; d&amp;eacute;j&amp;agrave; &amp;eacute;t&amp;eacute; d&amp;eacute;finie.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nbTemps&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Pour chacune des voitures&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;voitures&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="c1"&gt;# On fait avancer les voitures et on change leur vitesse&lt;/span&gt;
        &lt;span class="n"&gt;voitures&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;voitures&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;avance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;voitures&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;voitures&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vitesse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;voitures&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maj_vitesse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# On replace la voiture sur la grille de l'instant t&lt;/span&gt;
        &lt;span class="n"&gt;carte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;placerVoiture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;voitures&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="l'animation finale_1"&gt;L'animation finale&lt;/h2&gt;
&lt;p&gt;Ca y est ! On touche &amp;agrave; la fin. Normalement tout fonctionne maintenant et on se retrouve avec une carte contenant la position de toutes les voitures &amp;agrave; tout instant de la simulation. Il ne reste plus qu&amp;rsquo;&amp;agrave; traiter ce tableau afin d&amp;rsquo;afficher la simulation. On obtient finalement quelque chose qui ressemble &amp;agrave; l&amp;rsquo;animation ci-dessous.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Probl&amp;egrave;me" class="center img-zoomable" height="200px" src="https://nightlyside.github.io/new/blog/images/TIPE/anim_finale.gif"/&gt;&lt;/p&gt;
&lt;p&gt;Le mod&amp;egrave;le informatique est d&amp;egrave;s &amp;agrave; pr&amp;eacute;sent termin&amp;eacute;. La prochaine &amp;eacute;tape consiste &amp;agrave; construire une maquette mod&amp;eacute;lisant la circulation et de tout comparer &amp;agrave; la r&amp;eacute;alit&amp;eacute;.&lt;/p&gt;</content><category term="python"></category><category term="python"></category><category term="TIPE"></category><category term="route"></category></entry><entry><title>[TIPE] Un problème de route - Passage en 2D (3/4)</title><link href="https://nightlyside.github.io/new/blog/python/tipe-un-probleme-de-route-passage-en-2d-34/" rel="alternate"></link><published>2017-12-02T00:00:00+01:00</published><updated>2017-12-02T00:00:00+01:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2017-12-02:/new/blog/python/tipe-un-probleme-de-route-passage-en-2d-34/</id><summary type="html">&lt;p&gt;La deuxi&amp;egrave;me &amp;eacute;tape consiste &amp;agrave; passer la simulation &amp;agrave; deux dimensions en vue d'impl&amp;eacute;menter les d&amp;eacute;viations et intersections. On peut encore s&amp;eacute;parer cette &amp;eacute;tape en plusieurs sous-&amp;eacute;tapes : cr&amp;eacute;ation d'une grille qui va accueillir la route, &amp;agrave; la mani&amp;egrave;re d'un plateau contenant des cartes ou des jetons, puis cr&amp;eacute;ation de la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;La deuxi&amp;egrave;me &amp;eacute;tape consiste &amp;agrave; passer la simulation &amp;agrave; deux dimensions en vue d'impl&amp;eacute;menter les d&amp;eacute;viations et intersections. On peut encore s&amp;eacute;parer cette &amp;eacute;tape en plusieurs sous-&amp;eacute;tapes : cr&amp;eacute;ation d'une grille qui va accueillir la route, &amp;agrave; la mani&amp;egrave;re d'un plateau contenant des cartes ou des jetons, puis cr&amp;eacute;ation de la route et finalement adaptation des v&amp;eacute;hicules au nouveau syst&amp;egrave;me de route en 2 dimensions.&lt;/p&gt;
&lt;h2 id="creation de la grille"&gt;Cr&amp;eacute;ation de la grille&lt;/h2&gt;
&lt;p&gt;A quoi devra ressembler la grille ? Pour r&amp;eacute;pondre &amp;agrave; cette question on pose les conditions de d&amp;eacute;roulement de la simulation : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la grille devra contenir &lt;strong&gt;W&lt;/strong&gt; cases en largeur et &lt;strong&gt;H&lt;/strong&gt; cases en hauteur &lt;/li&gt;
&lt;li&gt;la simulation comportera &lt;strong&gt;T&lt;/strong&gt; it&amp;eacute;rations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alors la grille sera repr&amp;eacute;sent&amp;eacute;e par un tableau &amp;agrave; 3 dimensions de taille $T\times H\times W$ alors $\text{grille}[t]$ retournera l'&amp;eacute;tat de la grille &amp;agrave; l'instant $t$.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;grille_random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Cr&amp;eacute;e une grille de fa&amp;ccedil;on analogue &amp;agrave; grille(w, h, t)&lt;/span&gt;
&lt;span class="sd"&gt;    Et pr&amp;eacute;remplie la grille avec des valeurs al&amp;eacute;atoires&lt;/span&gt;
&lt;span class="sd"&gt;    Retourne un tableau de dimension 3 (x, y, t)&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="n"&gt;randrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Avec le syst&amp;egrave;me actuel d'exportation de tableau qui consiste &amp;agrave; attribuer une couleur par case (0 pour blanc, 1 pour vert et 2 pour orange pale) avec chaque couleur associ&amp;eacute;e &amp;agrave; un &amp;eacute;l&amp;eacute;ment de la simulation (respectivement vide, route et v&amp;eacute;hicule). Le code ci-dessus retournera une grille de la bonne taille. Le remplissage &amp;eacute;tant al&amp;eacute;atoire pour mettre en &amp;eacute;vidence la structure de la grille, un exemple est le suivant :&lt;/p&gt;
&lt;p&gt;&lt;img alt="Grille al&amp;eacute;atoire" class="center img-zoomable" height="200px" src="https://nightlyside.github.io/new/blog/images/TIPE/random.jpg"/&gt;&lt;/p&gt;
&lt;h2 id="creation de la route"&gt;Cr&amp;eacute;ation de la route&lt;/h2&gt;
&lt;p&gt;On entame d&amp;egrave;s &amp;agrave; pr&amp;eacute;sent une des parties des plus compliqu&amp;eacute;es avec la cr&amp;eacute;ation de la route. On d&amp;eacute;finit la route comme &amp;eacute;tant l'ensemble des positions prises par un chemin pour aller d'un point &lt;em&gt;A&lt;/em&gt; &amp;agrave; un point &lt;em&gt;B&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="AtoB" class="center img-zoomable" height="200px" src="https://nightlyside.github.io/new/blog/images/TIPE/AtoB.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;En prenant les coordonn&amp;eacute;es de $A = (0,0)$ et $B = (2,2)$ alors le chemin correpondant sera :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chemin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="algorithme"&gt;Algorithme&lt;/h3&gt;
&lt;p&gt;Pour cr&amp;eacute;er la route on initialise un tableau contenant les positions de chaque case. On commence par la case du d&amp;eacute;but puis on choisis la prochaine de fa&amp;ccedil;on relativement simple, on sera probablement amen&amp;eacute; qu'&amp;agrave; cr&amp;eacute;er des droites ou des angles droits, il n'est donc pas n&amp;eacute;cessaire de se compliquer la t&amp;acirc;che. Une fois qu'on est arriv&amp;eacute;e &amp;agrave; la derni&amp;egrave;re case on retourne la liste cr&amp;eacute;e.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;chemin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;  Permet de cr&amp;eacute;er un chemin entre deux coordonn&amp;eacute;es pos1, et pos2&lt;/span&gt;
&lt;span class="sd"&gt;  Prends en argument 2 positions (x, y)&lt;/span&gt;
&lt;span class="sd"&gt;  Retourne une liste de positions correspondant au chemin cr&amp;eacute;e&lt;/span&gt;
&lt;span class="sd"&gt;  """&lt;/span&gt;
  &lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos1&lt;/span&gt;
  &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos2&lt;/span&gt;
  &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pos1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos1&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;pos2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
          &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A partir de cet algorithme on peut maintenant cr&amp;eacute;er une nouvelle fonction qui prendra une liste de positions par lesquelles le chemin devra passer et qui retournera un tel chemin. Comme on suppose le trac&amp;eacute; global simple, on segmente le chemin en tra&amp;ccedil;ant la route entre 2 positions &amp;agrave; chaque fois. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;chemin_complexe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Permet de cr&amp;eacute;er un chemin complexe, c'est &amp;agrave; dire&lt;/span&gt;
&lt;span class="sd"&gt;    un chemin qui passe par n positions&lt;/span&gt;
&lt;span class="sd"&gt;    Retourne le chemin passant par les positions&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;cprime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chemin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cprime&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;A noter qu'&amp;eacute;crire &lt;code&gt;*positions&lt;/code&gt; permet de donner autant d'argument &amp;agrave; la fonction qu'on le souhaite&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Par exemple &amp;eacute;crire le code ci-dessous :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chemin_complexe&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Correspondra &amp;agrave; la grille suivante : 
&lt;img alt="chemin_sur_route" class="center img-zoomable" height="200px" src="https://nightlyside.github.io/new/blog/images/TIPE/chemin_sur_route.jpg"/&gt;&lt;/p&gt;
&lt;h2 id="faire avancer les voitures_1"&gt;Faire avancer les voitures&lt;/h2&gt;
&lt;p&gt;Maintenant qu'on a la grille ainsi que la route qui la parcourt, il est temps de faire avancer les voiture. Pour cela on r&amp;eacute;utilise le m&amp;ecirc;me principe que celui vu dans le post pr&amp;eacute;c&amp;eacute;dent. Cependant un probl&amp;egrave;me nous fait face, en effet comment savoir quelle sera la prochaine case que l'algorithme devra explorer ?&lt;/p&gt;
&lt;h3 id="recherche des voisins possibles"&gt;Recherche des voisins possibles&lt;/h3&gt;
&lt;p&gt;Une solution est de chercher toutes les cases qui juxtapose une position donn&amp;eacute;e (i.e. qui sont juste &amp;agrave; c&amp;ocirc;t&amp;eacute; de la case), on teste chacune des cases pour savoir si il s'agit bien d'une route. Si oui on l'ajoute &amp;agrave; la liste des voisins possible, sinon on passe &amp;agrave; la suivante. Une fois qu'on a test&amp;eacute; toutes les cases on retourne la liste des cases possibles.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cherche_voisins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chemin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Permet de renvoyer les voisins possibles juxtaposant &lt;/span&gt;
&lt;span class="sd"&gt;    la position actuelle&lt;/span&gt;
&lt;span class="sd"&gt;    Retourne une liste de positions &lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;
    &lt;span class="n"&gt;voisins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;chemin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;voisins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;chemin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;voisins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;voisins&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour choisir la case suivante on liste celle possible, on cherche la case la plus proche de celle &amp;agrave; atteindre. Dans le cas o&amp;ugrave; on a une d&amp;eacute;viation, l'algorithme choisira le chemin le plus court "&amp;agrave; vol d'oiseau". Ce qui &amp;agrave; l'air au premier abord de ressembler &amp;agrave; la r&amp;eacute;alit&amp;eacute;. Enfin.. c'est logique quoi :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;voisin_plus_proche&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;voisins&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Retourne le voisin le plus proche d'une position donn&amp;eacute;e&lt;/span&gt;
&lt;span class="sd"&gt;    Cela permet de d&amp;eacute;cider dans quelle direction aller pour &lt;/span&gt;
&lt;span class="sd"&gt;    atteindre un point donn&amp;eacute;&lt;/span&gt;
&lt;span class="sd"&gt;    Retourne une position&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;voisins&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;
    &lt;span class="n"&gt;dmin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"inf"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;vproche&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;voisins&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;voisin&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;voisins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;voisin&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;voisin&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;dmin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;dmin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;
            &lt;span class="n"&gt;vproche&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;voisin&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;vproche&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="nouveau calcul de la distance"&gt;Nouveau calcul de la distance&lt;/h3&gt;
&lt;p&gt;L'algorithme du post pr&amp;eacute;c&amp;eacute;dent avait besoin de connaitre la distance de la voiture &amp;agrave; celle qui lui pr&amp;eacute;c&amp;eacute;dait pour la phase de d&amp;eacute;c&amp;eacute;l&amp;eacute;ration. Maintenant on ne peux plus juste calculer la distance cart&amp;eacute;sienne entre les deux points &amp;agrave; cause de la forme de la route. Pour la calculer il suffit de partir de la position de la voiture et de remonter le chemin jusqu'&amp;agrave; rencontrer la voiture suivante.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;chemin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Essayer de calculer la distance entre 2 cases d'une grille&lt;/span&gt;
&lt;span class="sd"&gt;    en suivant un chemin donn&amp;eacute;&lt;/span&gt;
&lt;span class="sd"&gt;    Retourne un entier correspondant &amp;agrave; la longueur du chemin &amp;agrave; faire &lt;/span&gt;
&lt;span class="sd"&gt;    entre le point pos1 et pos2&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="c1"&gt;# On v&amp;eacute;rifie que les positions appartiennent au chemin&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;pos1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;route&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;pos2&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;chemin&lt;/span&gt;
    &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos1&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;pos2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;voisins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cherche_voisins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chemin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;voisin_plus_proche&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;voisins&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="deplacer la voiture"&gt;D&amp;eacute;placer la voiture&lt;/h3&gt;
&lt;p&gt;Maintenant qu'on a calcul&amp;eacute; tout ce qu'il fallait, il ne reste plus qu'&amp;agrave; d&amp;eacute;placer la voiture le long du chemin &amp;agrave; l'aide de tout ce qu'on a d&amp;eacute;finit plus haut. Pour cela on part de la position initiale (&lt;em&gt;pos&lt;/em&gt;) puis on parcourt le chemin d'un nombre de cases &amp;eacute;gal &amp;agrave; la vitesse de la voiture (&lt;em&gt;vitesse&lt;/em&gt;) si il y avait d&amp;eacute;j&amp;agrave; une voiture, par s&amp;eacute;curit&amp;eacute; on s'arr&amp;ecirc;te, sinon on continue jusqu'&amp;agrave; ce qu'on ait termin&amp;eacute;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;avance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos_i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vitesse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;chemin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grille&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;     
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Calcule la prochaine position d'une voiture sur un chemin&lt;/span&gt;
&lt;span class="sd"&gt;    en fonction de sa vitesse et de la voiture pr&amp;eacute;c&amp;eacute;dente&lt;/span&gt;
&lt;span class="sd"&gt;    Si la voiture devant est &amp;agrave; l'arret la voiture actuelle&lt;/span&gt;
&lt;span class="sd"&gt;    s'arr&amp;ecirc;tera juste avant &lt;/span&gt;
&lt;span class="sd"&gt;    Retourne une position ainsi que le nombre de case parcourues&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pos_i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;vitesse&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;nouvelle_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;voisin_suivant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nouvelle_pos&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;grille&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;            
        &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nouvelle_pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="resultat_1"&gt;R&amp;eacute;sultat&lt;/h2&gt;
&lt;p&gt;On r&amp;eacute;aplique le m&amp;ecirc;me proc&amp;eacute;d&amp;eacute; que pour la situation lin&amp;eacute;aire. On prends sur la route du dessus 100 voitures roulant &amp;agrave; 130km/h maximum et on calcule la simulation sur 250 it&amp;eacute;rations. On calcule chaque it&amp;eacute;ration puis on exporte la grille &amp;agrave; chaque instant. En assemblant les images dans un GIF anim&amp;eacute;, on obtient l'animation suivante :&lt;/p&gt;
&lt;p&gt;&lt;img alt="sim_2D_anim" class="center img-zoomable" height="400px" src="https://nightlyside.github.io/new/blog/images/TIPE/sim_2D_anim.gif"/&gt;&lt;/p&gt;</content><category term="python"></category><category term="python"></category><category term="TIPE"></category><category term="route"></category></entry><entry><title>[TIPE] Un problème de route - Le modèle informatique (2/4)</title><link href="https://nightlyside.github.io/new/blog/python/tipe-un-probleme-de-route-le-modele-informatique-24/" rel="alternate"></link><published>2017-12-01T00:00:00+01:00</published><updated>2017-12-01T00:00:00+01:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2017-12-01:/new/blog/python/tipe-un-probleme-de-route-le-modele-informatique-24/</id><summary type="html">&lt;p&gt;Nous allons maintenant mod&amp;eacute;liser le trafic routier pour une portion de route, en respectant les hypoth&amp;egrave;ses donn&amp;eacute;es et d&amp;eacute;crites dans le dernier post. Pour cela on proc&amp;egrave;de en 3 &amp;eacute;tapes : on cr&amp;eacute;e un mod&amp;egrave;le basique &amp;agrave; une dimension, puis on l&amp;rsquo;&amp;eacute;tend &amp;agrave; 2 dimensions et on ajoute en derni&amp;egrave;re …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nous allons maintenant mod&amp;eacute;liser le trafic routier pour une portion de route, en respectant les hypoth&amp;egrave;ses donn&amp;eacute;es et d&amp;eacute;crites dans le dernier post. Pour cela on proc&amp;egrave;de en 3 &amp;eacute;tapes : on cr&amp;eacute;e un mod&amp;egrave;le basique &amp;agrave; une dimension, puis on l&amp;rsquo;&amp;eacute;tend &amp;agrave; 2 dimensions et on ajoute en derni&amp;egrave;re &amp;eacute;tape les d&amp;eacute;viations et intersections. Ce post correspond &amp;agrave; la premi&amp;egrave;re phase.&lt;/p&gt;
&lt;p&gt;La question qui m&amp;rsquo;a le plus souvent &amp;eacute;t&amp;eacute; pos&amp;eacute;e lorsque je d&amp;eacute;crivais mon projet &amp;agrave; mes camarades de classe &amp;eacute;tait la suivante :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mais comment est-ce que tu choisis l&amp;rsquo;endroit o&amp;ugrave; va se produire l&amp;rsquo;embouteillage ?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A cette question je leur r&amp;eacute;ponds simplement que je ne choisis pas ! En effet, le but de cette mod&amp;eacute;lisation est de faire en sorte que les voitures, par leur comportement, cr&amp;eacute;ent une congestion.&lt;/p&gt;
&lt;h2 id="le comportement de base des voitures"&gt;Le comportement de base des voitures&lt;/h2&gt;
&lt;p&gt;En suivant l&amp;rsquo;id&amp;eacute;e du sujet de concours &lt;a href="https://nightlyside.github.io/new/blog/files/TIPE/PSI-Informatique.pdf"&gt;CCP 2017&lt;/a&gt; (concours d&amp;rsquo;entr&amp;eacute;e aux &amp;eacute;coles d&amp;rsquo;ing&amp;eacute;nieur), on peut d&amp;eacute;crire le comportement des voitures simplement en d&amp;eacute;composant un instant t en plusieurs &amp;eacute;tapes, en mettant &amp;agrave; jour leur vitesse. Cette m&amp;eacute;thode de simulation s&amp;rsquo;appelle aussi la simulation de &lt;strong&gt;Nagel et Schreckenberg&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id="acceleration"&gt;Acc&amp;eacute;l&amp;eacute;ration&lt;/h3&gt;
&lt;p&gt;La premi&amp;egrave;re &amp;eacute;tape consiste &amp;agrave; acc&amp;eacute;l&amp;eacute;rer le v&amp;eacute;hicule d&amp;rsquo;une case par unit&amp;eacute; de temps. Cela correspond &amp;agrave; une phase normale d&amp;rsquo;acc&amp;eacute;l&amp;eacute;ration. On limite cependant la vitesse &amp;agrave; la vitesse maximale de la route.&lt;/p&gt;
&lt;p&gt;$$ v_k(t + 1) \rightarrow \text{min}(v_k(t) + 1,v_\text{max}) $$&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;acceleration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vmax&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Augmente l'acc&amp;eacute;l&amp;eacute;ration du v&amp;eacute;hicule k d'une unit&amp;eacute;&lt;/span&gt;
&lt;span class="sd"&gt;    si il n'est pas &amp;agrave; sa vitesse maximale&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vmax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="deceleration"&gt;D&amp;eacute;c&amp;eacute;l&amp;eacute;ration&lt;/h3&gt;
&lt;p&gt;La seconde &amp;eacute;tape consiste &amp;agrave; faire ralentir le v&amp;eacute;hicule si la vitesse actuelle le fait rentrer en collision avec un autre v&amp;eacute;hicule. Pour se faire, on calcule la distance entre le v&amp;eacute;hicule et le pr&amp;eacute;c&amp;eacute;dent et on le compare &amp;agrave; la vitesse actuelle. Si le v&amp;eacute;hicule est trop loin, le v&amp;eacute;hicule roule &amp;agrave; la m&amp;ecirc;me vitesse, mais s&amp;rsquo;il est trop proche, le v&amp;eacute;hicule avance jusqu&amp;rsquo;&amp;agrave; coller le v&amp;eacute;hicule devant lui, sa vitesse en sera diminu&amp;eacute;e pour simuler un freinage.&lt;/p&gt;
&lt;p&gt;$$ v_k(t + 1) \rightarrow \text{min}(v_k(t + 1),d_k &amp;minus; 1) $$&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;deceleration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xk1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    D&amp;eacute;c&amp;eacute;l&amp;egrave;re si le v&amp;eacute;hicule k ne peut pas continuer &amp;agrave; sa vitesse &lt;/span&gt;
&lt;span class="sd"&gt;    actuelle (il y a un v&amp;eacute;hicule devant)&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;dk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xk1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;xk&lt;/span&gt; &lt;span class="c1"&gt;# distance entre les v&amp;eacute;hicules&lt;/span&gt;
    &lt;span class="c1"&gt;# mise &amp;agrave; jour de la vitesse&lt;/span&gt;
    &lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="facteur aleatoire"&gt;Facteur al&amp;eacute;atoire&lt;/h3&gt;
&lt;p&gt;Cette &amp;eacute;tape correspond au ralentissement al&amp;eacute;atoire qui peut survenir en tout temps. Pour expliquer le r&amp;eacute;alisme d&amp;rsquo;une telle op&amp;eacute;ration, il faut s&amp;rsquo;imaginer rouler sur une autoroute droite sans personne dessus &amp;agrave; part un v&amp;eacute;hicule qui roule (sans r&amp;eacute;gulateur de vitesse bien s&amp;ucirc;r). Alors il peut survenir un moment d&amp;rsquo;inattention qui va faire ralentir al&amp;eacute;atoirement le conducteur.&lt;/p&gt;
&lt;p&gt;$$ \text{Si rand()}&amp;lt; p \text{ alors }v_k(t + 1) \rightarrow \text{max}(v_k(t + 1) &amp;minus; 1,0) $$&lt;/p&gt;
&lt;p&gt;C&amp;rsquo;est ce ph&amp;eacute;nom&amp;egrave;ne qui est repr&amp;eacute;sent&amp;eacute; par cette &amp;eacute;tape, il se trouve d&amp;rsquo;ailleurs que pour cette simulation, cette &amp;eacute;tape est celle qui cr&amp;eacute;e les embouteillages routiers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;facteur_aleatoire&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Facteur al&amp;eacute;atoire de ralentissement (p)&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="deplacement"&gt;D&amp;eacute;placement&lt;/h3&gt;
&lt;p&gt;Cette derni&amp;egrave;re &amp;eacute;tape permet d&amp;rsquo;inscrire le mouvement li&amp;eacute; &amp;agrave; la vitesse de chaque v&amp;eacute;hicule. C&amp;rsquo;est &amp;agrave; dire qu&amp;rsquo;apr&amp;egrave;s avoir fait la mise &amp;agrave; jour de toutes les vitesses et en v&amp;eacute;rifiant bien qu&amp;rsquo;aucun v&amp;eacute;hicule ne rentre en collision avec d&amp;rsquo;autres, on d&amp;eacute;place les voitures sur la route en mettant &amp;agrave; jour leur position.&lt;/p&gt;
&lt;p&gt;$$ X_n(t + 1) \rightarrow X_n(t) + v_n(t + 1) $$&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;deplacement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    D&amp;eacute;place le v&amp;eacute;hicule k a sa position suivante&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;xk&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xk&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;vitesses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="resultat_1"&gt;R&amp;eacute;sultat&lt;/h2&gt;
&lt;p&gt;En prenant une route d&amp;rsquo;une certaine taille puis en initialisant la route avec un nombre de voitures donn&amp;eacute;, on obtient un tableau de taille &lt;em&gt;longueur x iterations&lt;/em&gt; qui repr&amp;eacute;sentera la route et chaque ligne correspondra &amp;agrave; un instant donn&amp;eacute;. On obtient un tableau de la forme :&lt;/p&gt;
&lt;p&gt;&lt;img alt="Simulation lin&amp;eacute;aire" class="center img-zoomable" height="200px" src="https://nightlyside.github.io/new/blog/images/TIPE/sim_lineaire.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;Les conditions initiales &amp;eacute;tant :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;toutes les voitures partent &amp;agrave; la m&amp;ecirc;me vitesse&lt;/li&gt;
&lt;li&gt;toutes les voitures partent avec une distance &amp;eacute;gale avec la pr&amp;eacute;c&amp;eacute;dente&lt;/li&gt;
&lt;li&gt;toutes les voitures poss&amp;egrave;dent le m&amp;ecirc;me facteur al&amp;eacute;atoire (80% ici)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chaque point jaune correspond &amp;agrave; un v&amp;eacute;hicule, le reste &amp;eacute;tant la route. On se rend compte qu&amp;rsquo;avec de telles hypoth&amp;egrave;ses, un bouchon se forme (sorte d&amp;rsquo;amas de points jaunes). Le code fonctionne !&lt;/p&gt;
&lt;p&gt;Pour mieux comprendre voici une animation qui reprends chaque ligne de l&amp;rsquo;image du dessus et la fait d&amp;eacute;filer l&amp;rsquo;une apr&amp;egrave;s l&amp;rsquo;autre. On comprends ainsi mieux pourquoi les amas de points correspondent &amp;agrave; un embouteillage.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Simulation lin&amp;eacute;aire" class="center img-zoomable" src="https://nightlyside.github.io/new/blog/images/TIPE/sim_lineaire_anim.gif"/&gt;&lt;/p&gt;
&lt;p&gt;La prochaine &amp;eacute;tape vue dans le prochain post sera de traduire ce code, d&amp;rsquo;utiliser le m&amp;ecirc;me principe et le m&amp;ecirc;me fonctionnement mais cette fois-ci sur une grille en 2D.&lt;/p&gt;</content><category term="python"></category><category term="python"></category><category term="TIPE"></category><category term="route"></category></entry><entry><title>[TIPE] Un problème de route - La démarche (1/4)</title><link href="https://nightlyside.github.io/new/blog/python/tipe-un-probleme-de-route-la-demarche-14/" rel="alternate"></link><published>2017-11-29T00:00:00+01:00</published><updated>2017-11-29T00:00:00+01:00</updated><author><name>Alexandre Froehlich</name></author><id>tag:nightlyside.github.io,2017-11-29:/new/blog/python/tipe-un-probleme-de-route-la-demarche-14/</id><summary type="html">&lt;p&gt;Le trafic routier est probablement l&amp;rsquo;un des plus grands fl&amp;eacute;aux du quotidien. Nous faisant perdre un temps consid&amp;eacute;rable, r&amp;eacute;duisant la productivit&amp;eacute; et poussant &amp;agrave; des comportements dangereux, les embouteillages repr&amp;eacute;sentent un facteur d&amp;eacute;terminant dans les accidents de la route. Alors qu&amp;rsquo;ils se produisent presque quotidiennement chaque jour sur …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Le trafic routier est probablement l&amp;rsquo;un des plus grands fl&amp;eacute;aux du quotidien. Nous faisant perdre un temps consid&amp;eacute;rable, r&amp;eacute;duisant la productivit&amp;eacute; et poussant &amp;agrave; des comportements dangereux, les embouteillages repr&amp;eacute;sentent un facteur d&amp;eacute;terminant dans les accidents de la route. Alors qu&amp;rsquo;ils se produisent presque quotidiennement chaque jour sur certaines routes, et ce depuis des d&amp;eacute;cennies, il serait enfin temps d&amp;rsquo;envisager une solution pour s&amp;rsquo;en d&amp;eacute;barrasser.&lt;/p&gt;
&lt;h2 id="avant-propos"&gt;Avant-propos&lt;/h2&gt;
&lt;p&gt;Ce que je vais m&amp;rsquo;efforcer de d&amp;eacute;crire au cours des prochains posts est la d&amp;eacute;marche que mon bin&amp;ocirc;me (Kieran D.) et moi-m&amp;ecirc;me avons entrepris afin de reproduire les conditions d&amp;rsquo;un bouchon routier, puis d&amp;rsquo;&amp;eacute;tudier l&amp;rsquo;impact de la cr&amp;eacute;ation d&amp;rsquo;une d&amp;eacute;viation sur un tel embouteillage.&lt;/p&gt;
&lt;p&gt;Cette d&amp;eacute;marche n&amp;rsquo;est probablement pas la plus r&amp;eacute;aliste des simulations et le r&amp;eacute;sultat obtenu pourrait &amp;eacute;ventuellement diff&amp;eacute;rer de ce que nous avons mesur&amp;eacute;. Le but &amp;eacute;tant de se rapprocher un maximum d&amp;rsquo;un cas concret afin d&amp;rsquo;avoir une id&amp;eacute;e g&amp;eacute;n&amp;eacute;rale des solutions &amp;agrave; notre disposition pour r&amp;eacute;gler le probl&amp;egrave;me du trafic routier.&lt;/p&gt;
&lt;h2 id="comment se cree un embouteillage ?"&gt;Comment se cr&amp;eacute;e un embouteillage ?&lt;/h2&gt;
&lt;p&gt;On vient &amp;agrave; peine de commencer &amp;agrave; r&amp;eacute;fl&amp;eacute;chir au sujet qu&amp;rsquo;on fait d&amp;eacute;j&amp;agrave; face &amp;agrave; une premi&amp;egrave;re barri&amp;egrave;re. Comment se cr&amp;eacute;e un bouchon routier ? La question a d&amp;eacute;j&amp;agrave; &amp;eacute;t&amp;eacute; pens&amp;eacute;e, r&amp;eacute;fl&amp;eacute;chie, retourn&amp;eacute;e. L&amp;rsquo;APRR (Autoroutes Paris-Rhin-Rh&amp;ocirc;ne) aborde la question dans &lt;a href="http://www.aprr.fr/fr/actualites/avec-vous-sur-la-route-comment-se-forment-les-bouchons-sur-autoroute"&gt;cet article&lt;/a&gt; et d&amp;eacute;finie l&amp;rsquo;embouteillage :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;La route est comme un &amp;laquo; tuyau &amp;raquo; qui ne peut faire passer plus d&amp;rsquo;un &amp;laquo; flux &amp;raquo; maximal de v&amp;eacute;hicules. &amp;Agrave; cette limite physique s&amp;rsquo;ajoute le temps de r&amp;eacute;action des conducteurs, qui r&amp;eacute;percutent avec un l&amp;eacute;ger d&amp;eacute;calage le coup de frein du conducteur qui les pr&amp;eacute;c&amp;egrave;de. Et red&amp;eacute;marrent ensuite avec un nouveau temps de retard. Lorsque la circulation est dense, cela suffit &amp;agrave; engendrer un bouchon : les temps de retard s&amp;rsquo;ajoutent les uns aux autres, aboutissant parfois &amp;agrave; une perturbation de grande ampleur.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Expliqu&amp;eacute;e autrement, il suffit qu&amp;rsquo;un conducteur adopte un mode de conduite qui sortirait de la &amp;ldquo;conduite de croisi&amp;egrave;re&amp;rdquo;, en changeant de voie rapidement par exemple ou encore en ralentissant dans une ligne droite tandis qu&amp;rsquo;aucun obstacle ne lui fait face.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Changement de voie" class="center img-zoomable" height="200px" src="https://nightlyside.github.io/new/blog/images/TIPE/chg_voie.jpg"/&gt;
&lt;center&gt;Source : &lt;a href="https://www.wikihow.com/Merge-with-Heavy-Traffic"&gt;Wikihow&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h2 id="comment traduire ces elements"&gt;Comment traduire ces &amp;eacute;l&amp;eacute;ments&lt;/h2&gt;
&lt;p&gt;On peut alors commencer &amp;agrave; faire une liste des &amp;eacute;l&amp;eacute;ments &amp;agrave; prendre en compte dans notre &amp;eacute;tude :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;les voitures ont une vitesse maximale impos&amp;eacute;e&lt;/li&gt;
&lt;li&gt;la voiture peut ralentir &amp;agrave; tout moment quel que soit la route (facteur al&amp;eacute;atoire)&lt;/li&gt;
&lt;li&gt;si la voiture rencontre un croisement elle peut emprunter l&amp;rsquo;un ou l&amp;rsquo;autre chemin&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ainsi que quelques hypoth&amp;egrave;ses simplificatrices :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;on &amp;eacute;tudiera qu&amp;rsquo;une portion de route o&amp;ugrave; la fin ram&amp;egrave;ne au d&amp;eacute;but de la route (cf. Tore)&lt;/li&gt;
&lt;li&gt;la route ne poss&amp;egrave;de qu&amp;rsquo;une seule voie&lt;/li&gt;
&lt;li&gt;la route ne circule que dans un sens (sens unique)&lt;/li&gt;
&lt;li&gt;si la voiture rencontre un croisement, le choix du chemin &amp;agrave; prendre est enti&amp;egrave;rement al&amp;eacute;atoire&lt;/li&gt;
&lt;li&gt;les accidents sont inexistants et si une voiture s&amp;rsquo;arr&amp;ecirc;te toutes celles qui suivent s&amp;rsquo;arr&amp;ecirc;tent en se collant &amp;agrave; celle de devant&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="et ensuite ?"&gt;Et ensuite ?&lt;/h2&gt;
&lt;p&gt;On a maintenant le principe et les concepts de base. Pour continuer dans notre d&amp;eacute;marche, le travail &amp;agrave; &amp;eacute;t&amp;eacute; d&amp;eacute;coup&amp;eacute; en deux partie :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;un mod&amp;egrave;le informatique : simuler au plus pr&amp;egrave;s la circulation routi&amp;egrave;re pour se rendre compte de l&amp;rsquo;impact de diff&amp;eacute;rents param&amp;egrave;tres sur le trafic routier&lt;/li&gt;
&lt;li&gt;une maquette : pour valider ou ajuster le mod&amp;egrave;le informatique&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="python"></category><category term="TIPE"></category><category term="route"></category></entry></feed>