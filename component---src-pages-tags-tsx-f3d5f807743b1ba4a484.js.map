{"version":3,"sources":["webpack:///./src/pages/tags.tsx"],"names":["pageQuery","Tags","data","siteTitle","site","siteMetadata","title","group","allMarkdownRemark","keywords","className","map","tag","key","fieldValue","to","totalCount"],"mappings":"4FAAA,8GAuDaA,EAAY,aAgBVC,UA7De,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACzBC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,mBAAqBN,EAAKM,kBAAkBD,MAE/D,OACE,kBAAC,IAAD,CAAYD,MAAOH,GACjB,kBAAC,IAAD,CAAMG,MAAM,WAAWG,SAAU,CAAC,OAAD,iCACjC,iCACE,wCACA,yBAAKC,UAAS,gBACXH,GACCA,EAAMI,KACJ,SAACC,GAAD,OACEA,GACE,yBAAKC,IAAKD,EAAIE,YACZ,4BACE,kBAAC,OAAD,CAAMC,GAAE,SAAWH,EAAIE,WAAf,KAA+BF,EAAIE,aAE7C,+BACGF,EAAII,WADP,QAEsB,IAAnBJ,EAAII,WAAmB,GAAK","file":"component---src-pages-tags-tsx-f3d5f807743b1ba4a484.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport MainLayout from \"../components/core/main-layout\";\nimport Head from \"../components/core/head\";\n\ninterface Props {\n  readonly data: PageQueryData;\n}\n\nconst Tags: React.FC<Props> = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const group = data.allMarkdownRemark && data.allMarkdownRemark.group;\n\n  return (\n    <MainLayout title={siteTitle}>\n      <Head title=\"All tags\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      <article>\n        <h1>All tags</h1>\n        <div className={`page-content`}>\n          {group &&\n            group.map(\n              (tag) =>\n                tag && (\n                  <div key={tag.fieldValue}>\n                    <h3>\n                      <Link to={`/tags/${tag.fieldValue}/`}>{tag.fieldValue}</Link>\n                    </h3>\n                    <small>\n                      {tag.totalCount} post\n                      {tag.totalCount === 1 ? \"\" : \"s\"}\n                    </small>\n                  </div>\n                ),\n            )}\n        </div>\n      </article>\n    </MainLayout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    group: {\n      fieldValue: string;\n      totalCount: number;\n    }[];\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { published: { ne: false } } }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default Tags;\n"],"sourceRoot":""}